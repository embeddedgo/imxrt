// DO NOT EDIT THIS FILE. GENERATED BY xgen.

//go:build imxrt1060

package src

import (
	"embedded/mmio"
	"unsafe"

	"github.com/embeddedgo/imxrt/p/mmap"
)

type Periph struct {
	SCR   mmio.R32[SCR]
	SBMR1 mmio.R32[SBMR1]
	SRSR  mmio.R32[SRSR]
	_     [4]uint32
	SBMR2 mmio.R32[SBMR2]
	GPR1  mmio.R32[GPR1]
	GPR2  mmio.R32[GPR2]
	GPR3  mmio.R32[uint32]
	GPR4  mmio.R32[uint32]
	GPR5  mmio.R32[uint32]
	GPR6  mmio.R32[uint32]
	GPR7  mmio.R32[uint32]
	GPR8  mmio.R32[uint32]
	GPR9  mmio.R32[uint32]
	GPR10 mmio.R32[uint32]
}

func SRC() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.SRC_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

type SCR uint32

func mask_wdog_rst_(p *Periph) mmio.RM32[SCR]  { return mmio.RM32[SCR]{&p.SCR, mask_wdog_rst} }
func core0_rst_(p *Periph) mmio.RM32[SCR]      { return mmio.RM32[SCR]{&p.SCR, core0_rst} }
func core0_dbg_rst_(p *Periph) mmio.RM32[SCR]  { return mmio.RM32[SCR]{&p.SCR, core0_dbg_rst} }
func dbg_rst_msk_pg_(p *Periph) mmio.RM32[SCR] { return mmio.RM32[SCR]{&p.SCR, dbg_rst_msk_pg} }
func mask_wdog3_rst_(p *Periph) mmio.RM32[SCR] { return mmio.RM32[SCR]{&p.SCR, mask_wdog3_rst} }

type SBMR1 uint32

func BOOT_CFG1_(p *Periph) mmio.RM32[SBMR1] { return mmio.RM32[SBMR1]{&p.SBMR1, BOOT_CFG1} }
func BOOT_CFG2_(p *Periph) mmio.RM32[SBMR1] { return mmio.RM32[SBMR1]{&p.SBMR1, BOOT_CFG2} }
func BOOT_CFG3_(p *Periph) mmio.RM32[SBMR1] { return mmio.RM32[SBMR1]{&p.SBMR1, BOOT_CFG3} }
func BOOT_CFG4_(p *Periph) mmio.RM32[SBMR1] { return mmio.RM32[SBMR1]{&p.SBMR1, BOOT_CFG4} }

type SRSR uint32

func ipp_reset_b_(p *Periph) mmio.RM32[SRSR] { return mmio.RM32[SRSR]{&p.SRSR, ipp_reset_b} }
func lockup_sysresetreq_(p *Periph) mmio.RM32[SRSR] {
	return mmio.RM32[SRSR]{&p.SRSR, lockup_sysresetreq}
}
func csu_reset_b_(p *Periph) mmio.RM32[SRSR]      { return mmio.RM32[SRSR]{&p.SRSR, csu_reset_b} }
func ipp_user_reset_b_(p *Periph) mmio.RM32[SRSR] { return mmio.RM32[SRSR]{&p.SRSR, ipp_user_reset_b} }
func wdog_rst_b_(p *Periph) mmio.RM32[SRSR]       { return mmio.RM32[SRSR]{&p.SRSR, wdog_rst_b} }
func jtag_rst_b_(p *Periph) mmio.RM32[SRSR]       { return mmio.RM32[SRSR]{&p.SRSR, jtag_rst_b} }
func jtag_sw_rst_(p *Periph) mmio.RM32[SRSR]      { return mmio.RM32[SRSR]{&p.SRSR, jtag_sw_rst} }
func wdog3_rst_b_(p *Periph) mmio.RM32[SRSR]      { return mmio.RM32[SRSR]{&p.SRSR, wdog3_rst_b} }
func tempsense_rst_b_(p *Periph) mmio.RM32[SRSR]  { return mmio.RM32[SRSR]{&p.SRSR, tempsense_rst_b} }

type SBMR2 uint32

func SEC_CONFIG_(p *Periph) mmio.RM32[SBMR2]  { return mmio.RM32[SBMR2]{&p.SBMR2, SEC_CONFIG} }
func DIR_BT_DIS_(p *Periph) mmio.RM32[SBMR2]  { return mmio.RM32[SBMR2]{&p.SBMR2, DIR_BT_DIS} }
func BT_FUSE_SEL_(p *Periph) mmio.RM32[SBMR2] { return mmio.RM32[SBMR2]{&p.SBMR2, BT_FUSE_SEL} }
func BMOD_(p *Periph) mmio.RM32[SBMR2]        { return mmio.RM32[SBMR2]{&p.SBMR2, BMOD} }

type GPR1 uint32

func PERSISTENT_ENTRY0_(p *Periph) mmio.RM32[GPR1] {
	return mmio.RM32[GPR1]{&p.GPR1, PERSISTENT_ENTRY0}
}

type GPR2 uint32

func PERSISTENT_ARG0_(p *Periph) mmio.RM32[GPR2] { return mmio.RM32[GPR2]{&p.GPR2, PERSISTENT_ARG0} }
