// DO NOT EDIT THIS FILE. GENERATED BY xgen.

//go:build imxrt1060

package dma

import (
	"embedded/mmio"
	"unsafe"

	"github.com/embeddedgo/imxrt/p/mmap"
)

type Periph struct {
	CR       mmio.R32[CR]
	ES       mmio.R32[ES]
	_        uint32
	ERQ      mmio.R32[ERQ]
	_        uint32
	EEI      mmio.R32[EEI]
	CEEI     mmio.R8[CTRL]
	SEEI     mmio.R8[CTRL]
	CERQ     mmio.R8[CTRL]
	SERQ     mmio.R8[CTRL]
	CDNE     mmio.R8[CTRL]
	SSRT     mmio.R8[CTRL]
	CERR     mmio.R8[CTRL]
	CINT     mmio.R8[CTRL]
	_        uint32
	INT      mmio.R32[INT]
	_        uint32
	ERR      mmio.R32[ERR]
	_        uint32
	HRS      mmio.R32[HRS]
	_        [3]uint32
	EARS     mmio.R32[EARS]
	_        [46]uint32
	DCHPRI3  mmio.R8[DCHPR]
	DCHPRI2  mmio.R8[DCHPR]
	DCHPRI1  mmio.R8[DCHPR]
	DCHPRI0  mmio.R8[DCHPR]
	DCHPRI7  mmio.R8[DCHPR]
	DCHPRI6  mmio.R8[DCHPR]
	DCHPRI5  mmio.R8[DCHPR]
	DCHPRI4  mmio.R8[DCHPR]
	DCHPRI11 mmio.R8[DCHPR]
	DCHPRI10 mmio.R8[DCHPR]
	DCHPRI9  mmio.R8[DCHPR]
	DCHPRI8  mmio.R8[DCHPR]
	DCHPRI15 mmio.R8[DCHPR]
	DCHPRI14 mmio.R8[DCHPR]
	DCHPRI13 mmio.R8[DCHPR]
	DCHPRI12 mmio.R8[DCHPR]
	DCHPRI19 mmio.R8[DCHPR]
	DCHPRI18 mmio.R8[DCHPR]
	DCHPRI17 mmio.R8[DCHPR]
	DCHPRI16 mmio.R8[DCHPR]
	DCHPRI23 mmio.R8[DCHPR]
	DCHPRI22 mmio.R8[DCHPR]
	DCHPRI21 mmio.R8[DCHPR]
	DCHPRI20 mmio.R8[DCHPR]
	DCHPRI27 mmio.R8[DCHPR]
	DCHPRI26 mmio.R8[DCHPR]
	DCHPRI25 mmio.R8[DCHPR]
	DCHPRI24 mmio.R8[DCHPR]
	DCHPRI31 mmio.R8[DCHPR]
	DCHPRI30 mmio.R8[DCHPR]
	DCHPRI29 mmio.R8[DCHPR]
	DCHPRI28 mmio.R8[DCHPR]
	_        [952]uint32
	TCD      [32]STCD
}

func DMA0() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.DMA0_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

type CR uint32

func EDBG_(p *Periph) mmio.RM32[CR]    { return mmio.RM32[CR]{&p.CR, EDBG} }
func ERCA_(p *Periph) mmio.RM32[CR]    { return mmio.RM32[CR]{&p.CR, ERCA} }
func ERGA_(p *Periph) mmio.RM32[CR]    { return mmio.RM32[CR]{&p.CR, ERGA} }
func HOE_(p *Periph) mmio.RM32[CR]     { return mmio.RM32[CR]{&p.CR, HOE} }
func HALT_(p *Periph) mmio.RM32[CR]    { return mmio.RM32[CR]{&p.CR, HALT} }
func CLM_(p *Periph) mmio.RM32[CR]     { return mmio.RM32[CR]{&p.CR, CLM} }
func EMLM_(p *Periph) mmio.RM32[CR]    { return mmio.RM32[CR]{&p.CR, EMLM} }
func GRP0PRI_(p *Periph) mmio.RM32[CR] { return mmio.RM32[CR]{&p.CR, GRP0PRI} }
func GRP1PRI_(p *Periph) mmio.RM32[CR] { return mmio.RM32[CR]{&p.CR, GRP1PRI} }
func ECX_(p *Periph) mmio.RM32[CR]     { return mmio.RM32[CR]{&p.CR, ECX} }
func CX_(p *Periph) mmio.RM32[CR]      { return mmio.RM32[CR]{&p.CR, CX} }
func ACT_(p *Periph) mmio.RM32[CR]     { return mmio.RM32[CR]{&p.CR, ACT} }

type ES uint32

func DBE_(p *Periph) mmio.RM32[ES] { return mmio.RM32[ES]{&p.ES, DBE} }
func SBE_(p *Periph) mmio.RM32[ES] { return mmio.RM32[ES]{&p.ES, SBE} }
func SGE_(p *Periph) mmio.RM32[ES] { return mmio.RM32[ES]{&p.ES, SGE} }
func NCE_(p *Periph) mmio.RM32[ES] { return mmio.RM32[ES]{&p.ES, NCE} }
func DOE_(p *Periph) mmio.RM32[ES] { return mmio.RM32[ES]{&p.ES, DOE} }
func DAE_(p *Periph) mmio.RM32[ES] { return mmio.RM32[ES]{&p.ES, DAE} }
func SOE_(p *Periph) mmio.RM32[ES] { return mmio.RM32[ES]{&p.ES, SOE} }
func SAE_(p *Periph) mmio.RM32[ES] { return mmio.RM32[ES]{&p.ES, SAE} }
func CNE_(p *Periph) mmio.RM32[ES] { return mmio.RM32[ES]{&p.ES, CNE} }
func CPE_(p *Periph) mmio.RM32[ES] { return mmio.RM32[ES]{&p.ES, CPE} }
func GPE_(p *Periph) mmio.RM32[ES] { return mmio.RM32[ES]{&p.ES, GPE} }
func CXE_(p *Periph) mmio.RM32[ES] { return mmio.RM32[ES]{&p.ES, CXE} }
func VLD_(p *Periph) mmio.RM32[ES] { return mmio.RM32[ES]{&p.ES, VLD} }

type ERQ uint32

func ERQ0_(p *Periph) mmio.RM32[ERQ]  { return mmio.RM32[ERQ]{&p.ERQ, ERQ0} }
func ERQ1_(p *Periph) mmio.RM32[ERQ]  { return mmio.RM32[ERQ]{&p.ERQ, ERQ1} }
func ERQ2_(p *Periph) mmio.RM32[ERQ]  { return mmio.RM32[ERQ]{&p.ERQ, ERQ2} }
func ERQ3_(p *Periph) mmio.RM32[ERQ]  { return mmio.RM32[ERQ]{&p.ERQ, ERQ3} }
func ERQ4_(p *Periph) mmio.RM32[ERQ]  { return mmio.RM32[ERQ]{&p.ERQ, ERQ4} }
func ERQ5_(p *Periph) mmio.RM32[ERQ]  { return mmio.RM32[ERQ]{&p.ERQ, ERQ5} }
func ERQ6_(p *Periph) mmio.RM32[ERQ]  { return mmio.RM32[ERQ]{&p.ERQ, ERQ6} }
func ERQ7_(p *Periph) mmio.RM32[ERQ]  { return mmio.RM32[ERQ]{&p.ERQ, ERQ7} }
func ERQ8_(p *Periph) mmio.RM32[ERQ]  { return mmio.RM32[ERQ]{&p.ERQ, ERQ8} }
func ERQ9_(p *Periph) mmio.RM32[ERQ]  { return mmio.RM32[ERQ]{&p.ERQ, ERQ9} }
func ERQ10_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ10} }
func ERQ11_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ11} }
func ERQ12_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ12} }
func ERQ13_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ13} }
func ERQ14_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ14} }
func ERQ15_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ15} }
func ERQ16_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ16} }
func ERQ17_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ17} }
func ERQ18_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ18} }
func ERQ19_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ19} }
func ERQ20_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ20} }
func ERQ21_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ21} }
func ERQ22_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ22} }
func ERQ23_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ23} }
func ERQ24_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ24} }
func ERQ25_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ25} }
func ERQ26_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ26} }
func ERQ27_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ27} }
func ERQ28_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ28} }
func ERQ29_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ29} }
func ERQ30_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ30} }
func ERQ31_(p *Periph) mmio.RM32[ERQ] { return mmio.RM32[ERQ]{&p.ERQ, ERQ31} }

type EEI uint32

func EEI0_(p *Periph) mmio.RM32[EEI]  { return mmio.RM32[EEI]{&p.EEI, EEI0} }
func EEI1_(p *Periph) mmio.RM32[EEI]  { return mmio.RM32[EEI]{&p.EEI, EEI1} }
func EEI2_(p *Periph) mmio.RM32[EEI]  { return mmio.RM32[EEI]{&p.EEI, EEI2} }
func EEI3_(p *Periph) mmio.RM32[EEI]  { return mmio.RM32[EEI]{&p.EEI, EEI3} }
func EEI4_(p *Periph) mmio.RM32[EEI]  { return mmio.RM32[EEI]{&p.EEI, EEI4} }
func EEI5_(p *Periph) mmio.RM32[EEI]  { return mmio.RM32[EEI]{&p.EEI, EEI5} }
func EEI6_(p *Periph) mmio.RM32[EEI]  { return mmio.RM32[EEI]{&p.EEI, EEI6} }
func EEI7_(p *Periph) mmio.RM32[EEI]  { return mmio.RM32[EEI]{&p.EEI, EEI7} }
func EEI8_(p *Periph) mmio.RM32[EEI]  { return mmio.RM32[EEI]{&p.EEI, EEI8} }
func EEI9_(p *Periph) mmio.RM32[EEI]  { return mmio.RM32[EEI]{&p.EEI, EEI9} }
func EEI10_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI10} }
func EEI11_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI11} }
func EEI12_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI12} }
func EEI13_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI13} }
func EEI14_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI14} }
func EEI15_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI15} }
func EEI16_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI16} }
func EEI17_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI17} }
func EEI18_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI18} }
func EEI19_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI19} }
func EEI20_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI20} }
func EEI21_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI21} }
func EEI22_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI22} }
func EEI23_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI23} }
func EEI24_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI24} }
func EEI25_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI25} }
func EEI26_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI26} }
func EEI27_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI27} }
func EEI28_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI28} }
func EEI29_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI29} }
func EEI30_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI30} }
func EEI31_(p *Periph) mmio.RM32[EEI] { return mmio.RM32[EEI]{&p.EEI, EEI31} }

type CTRL uint8

type INT uint32

func INT0_(p *Periph) mmio.RM32[INT]  { return mmio.RM32[INT]{&p.INT, INT0} }
func INT1_(p *Periph) mmio.RM32[INT]  { return mmio.RM32[INT]{&p.INT, INT1} }
func INT2_(p *Periph) mmio.RM32[INT]  { return mmio.RM32[INT]{&p.INT, INT2} }
func INT3_(p *Periph) mmio.RM32[INT]  { return mmio.RM32[INT]{&p.INT, INT3} }
func INT4_(p *Periph) mmio.RM32[INT]  { return mmio.RM32[INT]{&p.INT, INT4} }
func INT5_(p *Periph) mmio.RM32[INT]  { return mmio.RM32[INT]{&p.INT, INT5} }
func INT6_(p *Periph) mmio.RM32[INT]  { return mmio.RM32[INT]{&p.INT, INT6} }
func INT7_(p *Periph) mmio.RM32[INT]  { return mmio.RM32[INT]{&p.INT, INT7} }
func INT8_(p *Periph) mmio.RM32[INT]  { return mmio.RM32[INT]{&p.INT, INT8} }
func INT9_(p *Periph) mmio.RM32[INT]  { return mmio.RM32[INT]{&p.INT, INT9} }
func INT10_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT10} }
func INT11_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT11} }
func INT12_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT12} }
func INT13_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT13} }
func INT14_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT14} }
func INT15_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT15} }
func INT16_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT16} }
func INT17_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT17} }
func INT18_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT18} }
func INT19_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT19} }
func INT20_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT20} }
func INT21_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT21} }
func INT22_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT22} }
func INT23_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT23} }
func INT24_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT24} }
func INT25_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT25} }
func INT26_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT26} }
func INT27_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT27} }
func INT28_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT28} }
func INT29_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT29} }
func INT30_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT30} }
func INT31_(p *Periph) mmio.RM32[INT] { return mmio.RM32[INT]{&p.INT, INT31} }

type ERR uint32

func ERR0_(p *Periph) mmio.RM32[ERR]  { return mmio.RM32[ERR]{&p.ERR, ERR0} }
func ERR1_(p *Periph) mmio.RM32[ERR]  { return mmio.RM32[ERR]{&p.ERR, ERR1} }
func ERR2_(p *Periph) mmio.RM32[ERR]  { return mmio.RM32[ERR]{&p.ERR, ERR2} }
func ERR3_(p *Periph) mmio.RM32[ERR]  { return mmio.RM32[ERR]{&p.ERR, ERR3} }
func ERR4_(p *Periph) mmio.RM32[ERR]  { return mmio.RM32[ERR]{&p.ERR, ERR4} }
func ERR5_(p *Periph) mmio.RM32[ERR]  { return mmio.RM32[ERR]{&p.ERR, ERR5} }
func ERR6_(p *Periph) mmio.RM32[ERR]  { return mmio.RM32[ERR]{&p.ERR, ERR6} }
func ERR7_(p *Periph) mmio.RM32[ERR]  { return mmio.RM32[ERR]{&p.ERR, ERR7} }
func ERR8_(p *Periph) mmio.RM32[ERR]  { return mmio.RM32[ERR]{&p.ERR, ERR8} }
func ERR9_(p *Periph) mmio.RM32[ERR]  { return mmio.RM32[ERR]{&p.ERR, ERR9} }
func ERR10_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR10} }
func ERR11_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR11} }
func ERR12_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR12} }
func ERR13_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR13} }
func ERR14_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR14} }
func ERR15_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR15} }
func ERR16_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR16} }
func ERR17_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR17} }
func ERR18_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR18} }
func ERR19_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR19} }
func ERR20_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR20} }
func ERR21_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR21} }
func ERR22_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR22} }
func ERR23_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR23} }
func ERR24_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR24} }
func ERR25_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR25} }
func ERR26_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR26} }
func ERR27_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR27} }
func ERR28_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR28} }
func ERR29_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR29} }
func ERR30_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR30} }
func ERR31_(p *Periph) mmio.RM32[ERR] { return mmio.RM32[ERR]{&p.ERR, ERR31} }

type HRS uint32

func HRS0_(p *Periph) mmio.RM32[HRS]  { return mmio.RM32[HRS]{&p.HRS, HRS0} }
func HRS1_(p *Periph) mmio.RM32[HRS]  { return mmio.RM32[HRS]{&p.HRS, HRS1} }
func HRS2_(p *Periph) mmio.RM32[HRS]  { return mmio.RM32[HRS]{&p.HRS, HRS2} }
func HRS3_(p *Periph) mmio.RM32[HRS]  { return mmio.RM32[HRS]{&p.HRS, HRS3} }
func HRS4_(p *Periph) mmio.RM32[HRS]  { return mmio.RM32[HRS]{&p.HRS, HRS4} }
func HRS5_(p *Periph) mmio.RM32[HRS]  { return mmio.RM32[HRS]{&p.HRS, HRS5} }
func HRS6_(p *Periph) mmio.RM32[HRS]  { return mmio.RM32[HRS]{&p.HRS, HRS6} }
func HRS7_(p *Periph) mmio.RM32[HRS]  { return mmio.RM32[HRS]{&p.HRS, HRS7} }
func HRS8_(p *Periph) mmio.RM32[HRS]  { return mmio.RM32[HRS]{&p.HRS, HRS8} }
func HRS9_(p *Periph) mmio.RM32[HRS]  { return mmio.RM32[HRS]{&p.HRS, HRS9} }
func HRS10_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS10} }
func HRS11_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS11} }
func HRS12_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS12} }
func HRS13_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS13} }
func HRS14_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS14} }
func HRS15_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS15} }
func HRS16_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS16} }
func HRS17_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS17} }
func HRS18_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS18} }
func HRS19_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS19} }
func HRS20_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS20} }
func HRS21_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS21} }
func HRS22_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS22} }
func HRS23_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS23} }
func HRS24_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS24} }
func HRS25_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS25} }
func HRS26_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS26} }
func HRS27_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS27} }
func HRS28_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS28} }
func HRS29_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS29} }
func HRS30_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS30} }
func HRS31_(p *Periph) mmio.RM32[HRS] { return mmio.RM32[HRS]{&p.HRS, HRS31} }

type EARS uint32

func EDREQ_0_(p *Periph) mmio.RM32[EARS]  { return mmio.RM32[EARS]{&p.EARS, EDREQ_0} }
func EDREQ_1_(p *Periph) mmio.RM32[EARS]  { return mmio.RM32[EARS]{&p.EARS, EDREQ_1} }
func EDREQ_2_(p *Periph) mmio.RM32[EARS]  { return mmio.RM32[EARS]{&p.EARS, EDREQ_2} }
func EDREQ_3_(p *Periph) mmio.RM32[EARS]  { return mmio.RM32[EARS]{&p.EARS, EDREQ_3} }
func EDREQ_4_(p *Periph) mmio.RM32[EARS]  { return mmio.RM32[EARS]{&p.EARS, EDREQ_4} }
func EDREQ_5_(p *Periph) mmio.RM32[EARS]  { return mmio.RM32[EARS]{&p.EARS, EDREQ_5} }
func EDREQ_6_(p *Periph) mmio.RM32[EARS]  { return mmio.RM32[EARS]{&p.EARS, EDREQ_6} }
func EDREQ_7_(p *Periph) mmio.RM32[EARS]  { return mmio.RM32[EARS]{&p.EARS, EDREQ_7} }
func EDREQ_8_(p *Periph) mmio.RM32[EARS]  { return mmio.RM32[EARS]{&p.EARS, EDREQ_8} }
func EDREQ_9_(p *Periph) mmio.RM32[EARS]  { return mmio.RM32[EARS]{&p.EARS, EDREQ_9} }
func EDREQ_10_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_10} }
func EDREQ_11_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_11} }
func EDREQ_12_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_12} }
func EDREQ_13_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_13} }
func EDREQ_14_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_14} }
func EDREQ_15_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_15} }
func EDREQ_16_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_16} }
func EDREQ_17_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_17} }
func EDREQ_18_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_18} }
func EDREQ_19_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_19} }
func EDREQ_20_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_20} }
func EDREQ_21_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_21} }
func EDREQ_22_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_22} }
func EDREQ_23_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_23} }
func EDREQ_24_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_24} }
func EDREQ_25_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_25} }
func EDREQ_26_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_26} }
func EDREQ_27_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_27} }
func EDREQ_28_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_28} }
func EDREQ_29_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_29} }
func EDREQ_30_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_30} }
func EDREQ_31_(p *Periph) mmio.RM32[EARS] { return mmio.RM32[EARS]{&p.EARS, EDREQ_31} }

type DCHPR uint8

type STCD struct {
	SADDR            mmio.R32[SADDR]
	ATTR_SOFF        mmio.R32[ATTR_SOFF]
	NBYTES_MLNO      mmio.R32[NBYTES_MLNO]
	ML_NBYTES        mmio.R32[ML_NBYTES]
	DADDR            mmio.R32[DADDR]
	ELINK_CITER_DOFF mmio.R32[ELINK_CITER_DOFF]
	DLASTSGA         mmio.R32[DLASTSGA]
	ELINK_BITER_CSR  mmio.R32[ELINK_BITER_CSR]
}

type SADDR uint32

type ATTR_SOFF uint32

func SOFF_(p *Periph, i int) mmio.RM32[ATTR_SOFF] {
	return mmio.RM32[ATTR_SOFF]{&p.TCD[i].ATTR_SOFF, SOFF}
}
func DSIZE_(p *Periph, i int) mmio.RM32[ATTR_SOFF] {
	return mmio.RM32[ATTR_SOFF]{&p.TCD[i].ATTR_SOFF, DSIZE}
}
func DMOD_(p *Periph, i int) mmio.RM32[ATTR_SOFF] {
	return mmio.RM32[ATTR_SOFF]{&p.TCD[i].ATTR_SOFF, DMOD}
}
func SSIZE_(p *Periph, i int) mmio.RM32[ATTR_SOFF] {
	return mmio.RM32[ATTR_SOFF]{&p.TCD[i].ATTR_SOFF, SSIZE}
}
func SMOD_(p *Periph, i int) mmio.RM32[ATTR_SOFF] {
	return mmio.RM32[ATTR_SOFF]{&p.TCD[i].ATTR_SOFF, SMOD}
}

type NBYTES_MLNO uint32

func NBYTES_(p *Periph, i int) mmio.RM32[NBYTES_MLNO] {
	return mmio.RM32[NBYTES_MLNO]{&p.TCD[i].NBYTES_MLNO, NBYTES}
}

type ML_NBYTES uint32

type DADDR uint32

type ELINK_CITER_DOFF uint32

func DOFF_(p *Periph, i int) mmio.RM32[ELINK_CITER_DOFF] {
	return mmio.RM32[ELINK_CITER_DOFF]{&p.TCD[i].ELINK_CITER_DOFF, DOFF}
}
func ELINK_CITER_(p *Periph, i int) mmio.RM32[ELINK_CITER_DOFF] {
	return mmio.RM32[ELINK_CITER_DOFF]{&p.TCD[i].ELINK_CITER_DOFF, ELINK_CITER}
}

type DLASTSGA uint32

type ELINK_BITER_CSR uint32

func START_(p *Periph, i int) mmio.RM32[ELINK_BITER_CSR] {
	return mmio.RM32[ELINK_BITER_CSR]{&p.TCD[i].ELINK_BITER_CSR, START}
}
func INTMAJOR_(p *Periph, i int) mmio.RM32[ELINK_BITER_CSR] {
	return mmio.RM32[ELINK_BITER_CSR]{&p.TCD[i].ELINK_BITER_CSR, INTMAJOR}
}
func INTHALF_(p *Periph, i int) mmio.RM32[ELINK_BITER_CSR] {
	return mmio.RM32[ELINK_BITER_CSR]{&p.TCD[i].ELINK_BITER_CSR, INTHALF}
}
func DREQ_(p *Periph, i int) mmio.RM32[ELINK_BITER_CSR] {
	return mmio.RM32[ELINK_BITER_CSR]{&p.TCD[i].ELINK_BITER_CSR, DREQ}
}
func ESG_(p *Periph, i int) mmio.RM32[ELINK_BITER_CSR] {
	return mmio.RM32[ELINK_BITER_CSR]{&p.TCD[i].ELINK_BITER_CSR, ESG}
}
func MAJORELINK_(p *Periph, i int) mmio.RM32[ELINK_BITER_CSR] {
	return mmio.RM32[ELINK_BITER_CSR]{&p.TCD[i].ELINK_BITER_CSR, MAJORELINK}
}
func ACTIVE_(p *Periph, i int) mmio.RM32[ELINK_BITER_CSR] {
	return mmio.RM32[ELINK_BITER_CSR]{&p.TCD[i].ELINK_BITER_CSR, ACTIVE}
}
func DONE_(p *Periph, i int) mmio.RM32[ELINK_BITER_CSR] {
	return mmio.RM32[ELINK_BITER_CSR]{&p.TCD[i].ELINK_BITER_CSR, DONE}
}
func MAJORLINKCH_(p *Periph, i int) mmio.RM32[ELINK_BITER_CSR] {
	return mmio.RM32[ELINK_BITER_CSR]{&p.TCD[i].ELINK_BITER_CSR, MAJORLINKCH}
}
func BWC_(p *Periph, i int) mmio.RM32[ELINK_BITER_CSR] {
	return mmio.RM32[ELINK_BITER_CSR]{&p.TCD[i].ELINK_BITER_CSR, BWC}
}
func ELINK_BITER_(p *Periph, i int) mmio.RM32[ELINK_BITER_CSR] {
	return mmio.RM32[ELINK_BITER_CSR]{&p.TCD[i].ELINK_BITER_CSR, ELINK_BITER}
}
