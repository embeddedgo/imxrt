// DO NOT EDIT THIS FILE. GENERATED BY xgen.

//go:build imxrt1060

package pmu

import (
	"embedded/mmio"
	"unsafe"

	"github.com/embeddedgo/imxrt/p/mmap"
)

type Periph struct {
	_            [68]uint32
	REG_1P1      mmio.R32[REG]
	REG_1P1_SET  mmio.R32[REG]
	REG_1P1_CLR  mmio.R32[REG]
	REG_1P1_TOG  mmio.R32[REG]
	REG_3P0      mmio.R32[REG]
	REG_3P0_SET  mmio.R32[REG]
	REG_3P0_CLR  mmio.R32[REG]
	REG_3P0_TOG  mmio.R32[REG]
	REG_2P5      mmio.R32[REG]
	REG_2P5_SET  mmio.R32[REG]
	REG_2P5_CLR  mmio.R32[REG]
	REG_2P5_TOG  mmio.R32[REG]
	REG_CORE     mmio.R32[REG_CORE]
	REG_CORE_SET mmio.R32[REG_CORE]
	REG_CORE_CLR mmio.R32[REG_CORE]
	REG_CORE_TOG mmio.R32[REG_CORE]
	MISC0        mmio.R32[MISC0]
	MISC0_SET    mmio.R32[MISC0]
	MISC0_CLR    mmio.R32[MISC0]
	MISC0_TOG    mmio.R32[MISC0]
	MISC1        mmio.R32[MISC1]
	MISC1_SET    mmio.R32[MISC1]
	MISC1_CLR    mmio.R32[MISC1]
	MISC1_TOG    mmio.R32[MISC1]
	MISC2        mmio.R32[MISC2]
	MISC2_SET    mmio.R32[MISC2]
	MISC2_CLR    mmio.R32[MISC2]
	MISC2_TOG    mmio.R32[MISC2]
}

func PMU() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.PMU_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

type REG uint32

type REG_CORE uint32

func REG0_TARG_(p *Periph) mmio.RM32[REG_CORE]  { return mmio.RM32[REG_CORE]{&p.REG_CORE, REG0_TARG} }
func REG0_ADJ_(p *Periph) mmio.RM32[REG_CORE]   { return mmio.RM32[REG_CORE]{&p.REG_CORE, REG0_ADJ} }
func REG1_TARG_(p *Periph) mmio.RM32[REG_CORE]  { return mmio.RM32[REG_CORE]{&p.REG_CORE, REG1_TARG} }
func REG1_ADJ_(p *Periph) mmio.RM32[REG_CORE]   { return mmio.RM32[REG_CORE]{&p.REG_CORE, REG1_ADJ} }
func REG2_TARG_(p *Periph) mmio.RM32[REG_CORE]  { return mmio.RM32[REG_CORE]{&p.REG_CORE, REG2_TARG} }
func REG2_ADJ_(p *Periph) mmio.RM32[REG_CORE]   { return mmio.RM32[REG_CORE]{&p.REG_CORE, REG2_ADJ} }
func RAMP_RATE_(p *Periph) mmio.RM32[REG_CORE]  { return mmio.RM32[REG_CORE]{&p.REG_CORE, RAMP_RATE} }
func FET_ODRIVE_(p *Periph) mmio.RM32[REG_CORE] { return mmio.RM32[REG_CORE]{&p.REG_CORE, FET_ODRIVE} }

type MISC0 uint32

func REFTOP_PWD_(p *Periph) mmio.RM32[MISC0] { return mmio.RM32[MISC0]{&p.MISC0, REFTOP_PWD} }
func REFTOP_SELFBIASOFF_(p *Periph) mmio.RM32[MISC0] {
	return mmio.RM32[MISC0]{&p.MISC0, REFTOP_SELFBIASOFF}
}
func REFTOP_VBGADJ_(p *Periph) mmio.RM32[MISC0] { return mmio.RM32[MISC0]{&p.MISC0, REFTOP_VBGADJ} }
func REFTOP_VBGUP_(p *Periph) mmio.RM32[MISC0]  { return mmio.RM32[MISC0]{&p.MISC0, REFTOP_VBGUP} }
func STOP_MODE_CONFIG_(p *Periph) mmio.RM32[MISC0] {
	return mmio.RM32[MISC0]{&p.MISC0, STOP_MODE_CONFIG}
}
func DISCON_HIGH_SNVS_(p *Periph) mmio.RM32[MISC0] {
	return mmio.RM32[MISC0]{&p.MISC0, DISCON_HIGH_SNVS}
}
func OSC_I_(p *Periph) mmio.RM32[MISC0]           { return mmio.RM32[MISC0]{&p.MISC0, OSC_I} }
func OSC_XTALOK_(p *Periph) mmio.RM32[MISC0]      { return mmio.RM32[MISC0]{&p.MISC0, OSC_XTALOK} }
func OSC_XTALOK_EN_(p *Periph) mmio.RM32[MISC0]   { return mmio.RM32[MISC0]{&p.MISC0, OSC_XTALOK_EN} }
func CLKGATE_CTRL_(p *Periph) mmio.RM32[MISC0]    { return mmio.RM32[MISC0]{&p.MISC0, CLKGATE_CTRL} }
func CLKGATE_DELAY_(p *Periph) mmio.RM32[MISC0]   { return mmio.RM32[MISC0]{&p.MISC0, CLKGATE_DELAY} }
func RTC_XTAL_SOURCE_(p *Periph) mmio.RM32[MISC0] { return mmio.RM32[MISC0]{&p.MISC0, RTC_XTAL_SOURCE} }
func XTAL_24M_PWD_(p *Periph) mmio.RM32[MISC0]    { return mmio.RM32[MISC0]{&p.MISC0, XTAL_24M_PWD} }
func VID_PLL_PREDIV_(p *Periph) mmio.RM32[MISC0]  { return mmio.RM32[MISC0]{&p.MISC0, VID_PLL_PREDIV} }

type MISC1 uint32

func LVDS1_CLK_SEL_(p *Periph) mmio.RM32[MISC1] { return mmio.RM32[MISC1]{&p.MISC1, LVDS1_CLK_SEL} }
func LVDS2_CLK_SEL_(p *Periph) mmio.RM32[MISC1] { return mmio.RM32[MISC1]{&p.MISC1, LVDS2_CLK_SEL} }
func LVDSCLK1_OBEN_(p *Periph) mmio.RM32[MISC1] { return mmio.RM32[MISC1]{&p.MISC1, LVDSCLK1_OBEN} }
func LVDSCLK2_OBEN_(p *Periph) mmio.RM32[MISC1] { return mmio.RM32[MISC1]{&p.MISC1, LVDSCLK2_OBEN} }
func LVDSCLK1_IBEN_(p *Periph) mmio.RM32[MISC1] { return mmio.RM32[MISC1]{&p.MISC1, LVDSCLK1_IBEN} }
func LVDSCLK2_IBEN_(p *Periph) mmio.RM32[MISC1] { return mmio.RM32[MISC1]{&p.MISC1, LVDSCLK2_IBEN} }
func PFD_480_AUTOGATE_EN_(p *Periph) mmio.RM32[MISC1] {
	return mmio.RM32[MISC1]{&p.MISC1, PFD_480_AUTOGATE_EN}
}
func PFD_528_AUTOGATE_EN_(p *Periph) mmio.RM32[MISC1] {
	return mmio.RM32[MISC1]{&p.MISC1, PFD_528_AUTOGATE_EN}
}
func IRQ_TEMPPANIC_(p *Periph) mmio.RM32[MISC1] { return mmio.RM32[MISC1]{&p.MISC1, IRQ_TEMPPANIC} }
func IRQ_TEMPLOW_(p *Periph) mmio.RM32[MISC1]   { return mmio.RM32[MISC1]{&p.MISC1, IRQ_TEMPLOW} }
func IRQ_TEMPHIGH_(p *Periph) mmio.RM32[MISC1]  { return mmio.RM32[MISC1]{&p.MISC1, IRQ_TEMPHIGH} }
func IRQ_ANA_BO_(p *Periph) mmio.RM32[MISC1]    { return mmio.RM32[MISC1]{&p.MISC1, IRQ_ANA_BO} }
func IRQ_DIG_BO_(p *Periph) mmio.RM32[MISC1]    { return mmio.RM32[MISC1]{&p.MISC1, IRQ_DIG_BO} }

type MISC2 uint32

func REG0_BO_OFFSET_(p *Periph) mmio.RM32[MISC2] { return mmio.RM32[MISC2]{&p.MISC2, REG0_BO_OFFSET} }
func REG0_BO_STATUS_(p *Periph) mmio.RM32[MISC2] { return mmio.RM32[MISC2]{&p.MISC2, REG0_BO_STATUS} }
func REG0_ENABLE_BO_(p *Periph) mmio.RM32[MISC2] { return mmio.RM32[MISC2]{&p.MISC2, REG0_ENABLE_BO} }
func PLL3_disable_(p *Periph) mmio.RM32[MISC2]   { return mmio.RM32[MISC2]{&p.MISC2, PLL3_disable} }
func REG1_BO_OFFSET_(p *Periph) mmio.RM32[MISC2] { return mmio.RM32[MISC2]{&p.MISC2, REG1_BO_OFFSET} }
func REG1_BO_STATUS_(p *Periph) mmio.RM32[MISC2] { return mmio.RM32[MISC2]{&p.MISC2, REG1_BO_STATUS} }
func REG1_ENABLE_BO_(p *Periph) mmio.RM32[MISC2] { return mmio.RM32[MISC2]{&p.MISC2, REG1_ENABLE_BO} }
func AUDIO_DIV_LSB_(p *Periph) mmio.RM32[MISC2]  { return mmio.RM32[MISC2]{&p.MISC2, AUDIO_DIV_LSB} }
func REG2_BO_OFFSET_(p *Periph) mmio.RM32[MISC2] { return mmio.RM32[MISC2]{&p.MISC2, REG2_BO_OFFSET} }
func REG2_BO_STATUS_(p *Periph) mmio.RM32[MISC2] { return mmio.RM32[MISC2]{&p.MISC2, REG2_BO_STATUS} }
func REG2_ENABLE_BO_(p *Periph) mmio.RM32[MISC2] { return mmio.RM32[MISC2]{&p.MISC2, REG2_ENABLE_BO} }
func REG2_OK_(p *Periph) mmio.RM32[MISC2]        { return mmio.RM32[MISC2]{&p.MISC2, REG2_OK} }
func AUDIO_DIV_MSB_(p *Periph) mmio.RM32[MISC2]  { return mmio.RM32[MISC2]{&p.MISC2, AUDIO_DIV_MSB} }
func REG0_STEP_TIME_(p *Periph) mmio.RM32[MISC2] { return mmio.RM32[MISC2]{&p.MISC2, REG0_STEP_TIME} }
func REG1_STEP_TIME_(p *Periph) mmio.RM32[MISC2] { return mmio.RM32[MISC2]{&p.MISC2, REG1_STEP_TIME} }
func REG2_STEP_TIME_(p *Periph) mmio.RM32[MISC2] { return mmio.RM32[MISC2]{&p.MISC2, REG2_STEP_TIME} }
func VIDEO_DIV_(p *Periph) mmio.RM32[MISC2]      { return mmio.RM32[MISC2]{&p.MISC2, VIDEO_DIV} }
