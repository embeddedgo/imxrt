// DO NOT EDIT THIS FILE. GENERATED BY svdxgen.

//go:build imxrt1060

// Package dcdc provides access to the registers of the DCDC peripheral.
//
// Instances:
//
//	DCDC  DCDC_BASE  -  DCDC*
//
// Registers:
//
//	0x000 32  REG0  DCDC Register 0
//	0x004 32  REG1  DCDC Register 1
//	0x008 32  REG2  DCDC Register 2
//	0x00C 32  REG3  DCDC Register 3
//
// Import:
//
//	github.com/embeddedgo/imxrt/p/mmap
package dcdc

const (
	PWD_ZCD                 REG0 = 0x01 << 0  //+ power down the zero cross detection function for discontinuous conductor mode
	DISABLE_AUTO_CLK_SWITCH REG0 = 0x01 << 1  //+ Disable automatic clock switch from internal osc to xtal clock.
	SEL_CLK                 REG0 = 0x01 << 2  //+ select 24 MHz Crystal clock for DCDC, when dcdc_disable_auto_clk_switch is set.
	PWD_OSC_INT             REG0 = 0x01 << 3  //+ Power down internal osc. Only set this bit, when 24 MHz crystal osc is available
	PWD_CUR_SNS_CMP         REG0 = 0x01 << 4  //+ The power down signal of the current detector.
	CUR_SNS_THRSH           REG0 = 0x07 << 5  //+ Set the threshold of current detector, if the peak current of the inductor exceeds the threshold, the current detector will assert
	PWD_OVERCUR_DET         REG0 = 0x01 << 8  //+ power down overcurrent detection comparator
	OVERCUR_TRIG_ADJ        REG0 = 0x03 << 9  //+ The threshold of over current detection in run mode and power save mode: run mode power save mode 0x0 1 A 0
	PWD_CMP_BATT_DET        REG0 = 0x01 << 11 //+ set to "1" to power down the low voltage detection comparator
	ADJ_POSLIMIT_BUCK       REG0 = 0x0F << 12 //+ adjust value to poslimit_buck register
	EN_LP_OVERLOAD_SNS      REG0 = 0x01 << 16 //+ enable the overload detection in power save mode, if current is larger than the overloading threshold (typical value is 50 mA), DCDC will switch to the run mode automatically
	PWD_HIGH_VOLT_DET       REG0 = 0x01 << 17 //+ power down overvoltage detection comparator
	LP_OVERLOAD_THRSH       REG0 = 0x03 << 18 //+ the threshold of the counting number of charging times during the period that lp_overload_freq_sel sets in power save mode
	LP_OVERLOAD_FREQ_SEL    REG0 = 0x01 << 20 //+ the period of counting the charging times in power save mode 0: eight 32k cycle 1: sixteen 32k cycle
	LP_HIGH_HYS             REG0 = 0x01 << 21 //+ Adjust hysteretic value in low power from 12.5mV to 25mV
	PWD_CMP_OFFSET          REG0 = 0x01 << 26 //+ power down output range comparator
	XTALOK_DISABLE          REG0 = 0x01 << 27 //+ 1'b1: Disable xtalok detection circuit 1'b0: Enable xtalok detection circuit
	CURRENT_ALERT_RESET     REG0 = 0x01 << 28 //+ reset current alert signal
	XTAL_24M_OK             REG0 = 0x01 << 29 //+ set to 1 to switch internal ring osc to xtal 24M
	STS_DC_OK               REG0 = 0x01 << 31 //+ Status register to indicate DCDC status. 1'b1: DCDC already settled 1'b0: DCDC is settling
)

const (
	PWD_ZCDn                 = 0
	DISABLE_AUTO_CLK_SWITCHn = 1
	SEL_CLKn                 = 2
	PWD_OSC_INTn             = 3
	PWD_CUR_SNS_CMPn         = 4
	CUR_SNS_THRSHn           = 5
	PWD_OVERCUR_DETn         = 8
	OVERCUR_TRIG_ADJn        = 9
	PWD_CMP_BATT_DETn        = 11
	ADJ_POSLIMIT_BUCKn       = 12
	EN_LP_OVERLOAD_SNSn      = 16
	PWD_HIGH_VOLT_DETn       = 17
	LP_OVERLOAD_THRSHn       = 18
	LP_OVERLOAD_FREQ_SELn    = 20
	LP_HIGH_HYSn             = 21
	PWD_CMP_OFFSETn          = 26
	XTALOK_DISABLEn          = 27
	CURRENT_ALERT_RESETn     = 28
	XTAL_24M_OKn             = 29
	STS_DC_OKn               = 31
)

const (
	REG_FBK_SEL         REG1 = 0x03 << 7  //+ select the feedback point of the internal regulator
	REG_RLOAD_SW        REG1 = 0x01 << 9  //+ control the load resistor of the internal regulator of DCDC, the load resistor is connected as default "1", and need set to "0" to disconnect the load resistor
	LP_CMP_ISRC_SEL     REG1 = 0x03 << 12 //+ set the current bias of low power comparator 0x0: 50 nA 0x1: 100 nA 0x2: 200 nA 0x3: 400 nA
	LOOPCTRL_HST_THRESH REG1 = 0x01 << 21 //+ increase the threshold detection for common mode analog comparator
	LOOPCTRL_EN_HYST    REG1 = 0x01 << 23 //+ Enable hysteresis in switching converter common mode analog comparators
	VBG_TRIM            REG1 = 0x1F << 24 //+ trim bandgap voltage
)

const (
	REG_FBK_SELn         = 7
	REG_RLOAD_SWn        = 9
	LP_CMP_ISRC_SELn     = 12
	LOOPCTRL_HST_THRESHn = 21
	LOOPCTRL_EN_HYSTn    = 23
	VBG_TRIMn            = 24
)

const (
	LOOPCTRL_DC_C          REG2 = 0x03 << 0  //+ Ratio of integral control parameter to proportional control parameter in the switching DC-DC converter, and can be used to optimize efficiency and loop response
	LOOPCTRL_DC_R          REG2 = 0x0F << 2  //+ Magnitude of proportional control parameter in the switching DC-DC converter control loop.
	LOOPCTRL_DC_FF         REG2 = 0x07 << 6  //+ Two's complement feed forward step in duty cycle in the switching DC-DC converter
	LOOPCTRL_EN_RCSCALE    REG2 = 0x07 << 9  //+ Enable analog circuit of DC-DC converter to respond faster under transient load conditions.
	LOOPCTRL_RCSCALE_THRSH REG2 = 0x01 << 12 //+ Increase the threshold detection for RC scale circuit.
	LOOPCTRL_HYST_SIGN     REG2 = 0x01 << 13 //+ Invert the sign of the hysteresis in DC-DC analog comparators.
	DISABLE_PULSE_SKIP     REG2 = 0x01 << 27 //+ Set to "0" : stop charging if the duty cycle is lower than what set by dcdc_neglimit_in
	DCM_SET_CTRL           REG2 = 0x01 << 28 //+ Set high to improve the transition from heavy load to light load
)

const (
	LOOPCTRL_DC_Cn          = 0
	LOOPCTRL_DC_Rn          = 2
	LOOPCTRL_DC_FFn         = 6
	LOOPCTRL_EN_RCSCALEn    = 9
	LOOPCTRL_RCSCALE_THRSHn = 12
	LOOPCTRL_HYST_SIGNn     = 13
	DISABLE_PULSE_SKIPn     = 27
	DCM_SET_CTRLn           = 28
)

const (
	TRG                   REG3 = 0x1F << 0  //+ Target value of VDD_SOC, 25 mV each step 0x0: 0.8V 0xE: 1.15V 0x1F:1.575V
	TARGET_LP             REG3 = 0x07 << 8  //+ Target value of standby (low power) mode 0x0: 0
	MINPWR_DC_HALFCLK     REG3 = 0x01 << 24 //+ Set DCDC clock to half freqeuncy for continuous mode
	MISC_DELAY_TIMING     REG3 = 0x01 << 27 //+ Ajust delay to reduce ground noise
	MISC_DISABLEFET_LOGIC REG3 = 0x01 << 28 //+ Reserved
	DISABLE_STEP          REG3 = 0x01 << 30 //+ Disable stepping for the output VDD_SOC of DCDC
)

const (
	TRGn                   = 0
	TARGET_LPn             = 8
	MINPWR_DC_HALFCLKn     = 24
	MISC_DELAY_TIMINGn     = 27
	MISC_DISABLEFET_LOGICn = 28
	DISABLE_STEPn          = 30
)
