// DO NOT EDIT THIS FILE. GENERATED BY svdxgen.

//go:build imxrt1060

// Package pgc provides access to the registers of the PGC peripheral.
//
// Instances:
//  PGC  PGC_BASE  -  -
// Registers:
//  0x220 32  MEGA_CTRL    PGC Mega Control Register
//  0x224 32  MEGA_PUPSCR  PGC Mega Power Up Sequence Control Register
//  0x228 32  MEGA_PDNSCR  PGC Mega Pull Down Sequence Control Register
//  0x22C 32  MEGA_SR      PGC Mega Power Gating Controller Status Register
//  0x2A0 32  CPU_CTRL     PGC CPU Control Register
//  0x2A4 32  CPU_PUPSCR   PGC CPU Power Up Sequence Control Register
//  0x2A8 32  CPU_PDNSCR   PGC CPU Pull Down Sequence Control Register
//  0x2AC 32  CPU_SR       PGC CPU Power Gating Controller Status Register
// Import:
//  github.com/embeddedgo/imxrt/p/mmap
package pgc

const (
	PCR   MEGA_CTRL = 0x01 << 0 //+ Power Control PCR must not change from power-down request (pdn_req) assertion until the target subsystem is completely powered up
	PCR_0 MEGA_CTRL = 0x00 << 0 //  Do not switch off power even if pdn_req is asserted.
	PCR_1 MEGA_CTRL = 0x01 << 0 //  Switch off power when pdn_req is asserted.
)

const (
	PCRn = 0
)

const (
	SW     MEGA_PUPSCR = 0x3F << 0 //+ After a power-up request (pup_req assertion), the PGC waits a number of IPG clocks equal to the value of SW before asserting power toggle on/off signal (switch_b)
	SW2ISO MEGA_PUPSCR = 0x3F << 8 //+ After asserting power toggle on/off signal (switch_b), the PGC waits a number of IPG clocks equal to the value of SW2ISO before negating isolation
)

const (
	SWn     = 0
	SW2ISOn = 8
)

const (
	ISO    MEGA_PDNSCR = 0x3F << 0 //+ After a power-down request (pdn_req assertion), the PGC waits a number of IPG clocks equal to the value of ISO before asserting isolation
	ISO2SW MEGA_PDNSCR = 0x3F << 8 //+ After asserting isolation, the PGC waits a number of IPG clocks equal to the value of ISO2SW before negating power toggle on/off signal (switch_b)
)

const (
	ISOn    = 0
	ISO2SWn = 8
)

const (
	PSR   MEGA_SR = 0x01 << 0 //+ Power status
	PSR_0 MEGA_SR = 0x00 << 0 //  The target subsystem was not powered down for the previous power-down request.
	PSR_1 MEGA_SR = 0x01 << 0 //  The target subsystem was powered down for the previous power-down request.
)

const (
	PSRn = 0
)

const (
	PCR   CPU_CTRL = 0x01 << 0 //+ Power Control PCR must not change from power-down request (pdn_req) assertion until the target subsystem is completely powered up
	PCR_0 CPU_CTRL = 0x00 << 0 //  Do not switch off power even if pdn_req is asserted.
	PCR_1 CPU_CTRL = 0x01 << 0 //  Switch off power when pdn_req is asserted.
)

const (
	PCRn = 0
)

const (
	SW     CPU_PUPSCR = 0x3F << 0 //+ There are two different silicon revisions: 1
	SW2ISO CPU_PUPSCR = 0x3F << 8 //+ There are two different silicon revisions: 1
)

const (
	SWn     = 0
	SW2ISOn = 8
)

const (
	ISO    CPU_PDNSCR = 0x3F << 0 //+ After a power-down request (pdn_req assertion), the PGC waits a number of 32k clocks equal to the value of ISO before asserting isolation
	ISO2SW CPU_PDNSCR = 0x3F << 8 //+ After asserting isolation, the PGC waits a number of 32k clocks equal to the value of ISO2SW before negating
)

const (
	ISOn    = 0
	ISO2SWn = 8
)

const (
	PSR   CPU_SR = 0x01 << 0 //+ Power status
	PSR_0 CPU_SR = 0x00 << 0 //  The target subsystem was not powered down for the previous power-down request.
	PSR_1 CPU_SR = 0x01 << 0 //  The target subsystem was powered down for the previous power-down request.
)

const (
	PSRn = 0
)
