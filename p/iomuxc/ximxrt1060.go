// Code generated by xgen -g; DO NOT EDIT.

//go:build imxrt1060

package iomuxc

import (
	"embedded/mmio"
	"unsafe"

	"github.com/embeddedgo/imxrt/p/mmap"
)

type Periph struct {
	_                                        [5]uint32
	SW_MUX_CTL_PAD_GPIO_EMC_00               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_01               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_02               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_03               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_04               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_05               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_06               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_07               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_08               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_09               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_10               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_11               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_12               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_13               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_14               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_15               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_16               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_17               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_18               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_19               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_20               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_21               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_22               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_23               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_24               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_25               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_26               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_27               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_28               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_29               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_30               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_31               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_32               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_33               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_34               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_35               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_36               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_37               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_38               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_39               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_40               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_EMC_41               mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_00             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_01             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_02             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_03             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_04             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_05             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_06             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_07             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_08             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_09             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_10             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_11             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_12             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_13             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_14             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B0_15             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_00             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_01             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_02             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_03             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_04             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_05             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_06             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_07             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_08             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_09             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_10             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_11             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_12             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_13             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_14             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_AD_B1_15             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_00                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_01                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_02                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_03                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_04                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_05                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_06                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_07                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_08                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_09                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_10                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_11                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_12                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_13                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_14                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B0_15                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_00                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_01                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_02                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_03                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_04                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_05                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_06                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_07                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_08                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_09                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_10                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_11                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_12                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_13                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_14                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_B1_15                mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B0_00             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B0_01             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B0_02             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B0_03             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B0_04             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B0_05             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B1_00             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B1_01             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B1_02             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B1_03             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B1_04             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B1_05             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B1_06             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B1_07             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B1_08             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B1_09             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B1_10             mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SD_B1_11             mmio.R32[SW_MUX_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_00               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_01               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_02               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_03               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_04               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_05               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_06               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_07               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_08               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_09               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_10               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_11               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_12               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_13               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_14               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_15               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_16               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_17               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_18               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_19               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_20               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_21               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_22               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_23               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_24               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_25               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_26               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_27               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_28               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_29               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_30               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_31               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_32               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_33               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_34               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_35               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_36               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_37               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_38               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_39               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_40               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_EMC_41               mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_00             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_01             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_02             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_03             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_04             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_05             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_06             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_07             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_08             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_09             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_10             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_11             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_12             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_13             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_14             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B0_15             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_00             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_01             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_02             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_03             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_04             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_05             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_06             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_07             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_08             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_09             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_10             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_11             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_12             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_13             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_14             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_AD_B1_15             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_00                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_01                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_02                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_03                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_04                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_05                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_06                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_07                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_08                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_09                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_10                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_11                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_12                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_13                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_14                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B0_15                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_00                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_01                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_02                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_03                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_04                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_05                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_06                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_07                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_08                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_09                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_10                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_11                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_12                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_13                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_14                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_B1_15                mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B0_00             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B0_01             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B0_02             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B0_03             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B0_04             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B0_05             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B1_00             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B1_01             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B1_02             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B1_03             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B1_04             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B1_05             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B1_06             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B1_07             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B1_08             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B1_09             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B1_10             mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SD_B1_11             mmio.R32[SW_PAD_CTL]
	ANATOP_USB_OTG1_ID_SELECT_INPUT          mmio.R32[ANATOP_USB_OTG1_ID_SELECT_INPUT]
	ANATOP_USB_OTG2_ID_SELECT_INPUT          mmio.R32[ANATOP_USB_OTG2_ID_SELECT_INPUT]
	CCM_PMIC_READY_SELECT_INPUT              mmio.R32[CCM_PMIC_READY_SELECT_INPUT]
	CSI_DATA02_SELECT_INPUT                  mmio.R32[CSI_DATA02_SELECT_INPUT]
	CSI_DATA03_SELECT_INPUT                  mmio.R32[CSI_DATA03_SELECT_INPUT]
	CSI_DATA04_SELECT_INPUT                  mmio.R32[CSI_DATA04_SELECT_INPUT]
	CSI_DATA05_SELECT_INPUT                  mmio.R32[CSI_DATA05_SELECT_INPUT]
	CSI_DATA06_SELECT_INPUT                  mmio.R32[CSI_DATA06_SELECT_INPUT]
	CSI_DATA07_SELECT_INPUT                  mmio.R32[CSI_DATA07_SELECT_INPUT]
	CSI_DATA08_SELECT_INPUT                  mmio.R32[CSI_DATA08_SELECT_INPUT]
	CSI_DATA09_SELECT_INPUT                  mmio.R32[CSI_DATA09_SELECT_INPUT]
	CSI_HSYNC_SELECT_INPUT                   mmio.R32[CSI_HSYNC_SELECT_INPUT]
	CSI_PIXCLK_SELECT_INPUT                  mmio.R32[CSI_PIXCLK_SELECT_INPUT]
	CSI_VSYNC_SELECT_INPUT                   mmio.R32[CSI_VSYNC_SELECT_INPUT]
	ENET_IPG_CLK_RMII_SELECT_INPUT           mmio.R32[ENET_IPG_CLK_RMII_SELECT_INPUT]
	ENET_MDIO_SELECT_INPUT                   mmio.R32[ENET_MDIO_SELECT_INPUT]
	ENET0_RXDATA_SELECT_INPUT                mmio.R32[ENET0_RXDATA_SELECT_INPUT]
	ENET1_RXDATA_SELECT_INPUT                mmio.R32[ENET1_RXDATA_SELECT_INPUT]
	ENET_RXEN_SELECT_INPUT                   mmio.R32[ENET_RXEN_SELECT_INPUT]
	ENET_RXERR_SELECT_INPUT                  mmio.R32[ENET_RXERR_SELECT_INPUT]
	ENET0_TIMER_SELECT_INPUT                 mmio.R32[ENET0_TIMER_SELECT_INPUT]
	ENET_TXCLK_SELECT_INPUT                  mmio.R32[ENET_TXCLK_SELECT_INPUT]
	FLEXCAN1_RX_SELECT_INPUT                 mmio.R32[FLEXCAN1_RX_SELECT_INPUT]
	FLEXCAN2_RX_SELECT_INPUT                 mmio.R32[FLEXCAN2_RX_SELECT_INPUT]
	FLEXPWM1_PWMA3_SELECT_INPUT              mmio.R32[FLEXPWM1_PWMA3_SELECT_INPUT]
	FLEXPWM1_PWMA0_SELECT_INPUT              mmio.R32[FLEXPWM1_PWMA0_SELECT_INPUT]
	FLEXPWM1_PWMA1_SELECT_INPUT              mmio.R32[FLEXPWM1_PWMA1_SELECT_INPUT]
	FLEXPWM1_PWMA2_SELECT_INPUT              mmio.R32[FLEXPWM1_PWMA2_SELECT_INPUT]
	FLEXPWM1_PWMB3_SELECT_INPUT              mmio.R32[FLEXPWM1_PWMB3_SELECT_INPUT]
	FLEXPWM1_PWMB0_SELECT_INPUT              mmio.R32[FLEXPWM1_PWMB0_SELECT_INPUT]
	FLEXPWM1_PWMB1_SELECT_INPUT              mmio.R32[FLEXPWM1_PWMB1_SELECT_INPUT]
	FLEXPWM1_PWMB2_SELECT_INPUT              mmio.R32[FLEXPWM1_PWMB2_SELECT_INPUT]
	FLEXPWM2_PWMA3_SELECT_INPUT              mmio.R32[FLEXPWM2_PWMA3_SELECT_INPUT]
	FLEXPWM2_PWMA0_SELECT_INPUT              mmio.R32[FLEXPWM2_PWMA0_SELECT_INPUT]
	FLEXPWM2_PWMA1_SELECT_INPUT              mmio.R32[FLEXPWM2_PWMA1_SELECT_INPUT]
	FLEXPWM2_PWMA2_SELECT_INPUT              mmio.R32[FLEXPWM2_PWMA2_SELECT_INPUT]
	FLEXPWM2_PWMB3_SELECT_INPUT              mmio.R32[FLEXPWM2_PWMB3_SELECT_INPUT]
	FLEXPWM2_PWMB0_SELECT_INPUT              mmio.R32[FLEXPWM2_PWMB0_SELECT_INPUT]
	FLEXPWM2_PWMB1_SELECT_INPUT              mmio.R32[FLEXPWM2_PWMB1_SELECT_INPUT]
	FLEXPWM2_PWMB2_SELECT_INPUT              mmio.R32[FLEXPWM2_PWMB2_SELECT_INPUT]
	FLEXPWM4_PWMA0_SELECT_INPUT              mmio.R32[FLEXPWM4_PWMA0_SELECT_INPUT]
	FLEXPWM4_PWMA1_SELECT_INPUT              mmio.R32[FLEXPWM4_PWMA1_SELECT_INPUT]
	FLEXPWM4_PWMA2_SELECT_INPUT              mmio.R32[FLEXPWM4_PWMA2_SELECT_INPUT]
	FLEXPWM4_PWMA3_SELECT_INPUT              mmio.R32[FLEXPWM4_PWMA3_SELECT_INPUT]
	FLEXSPIA_DQS_SELECT_INPUT                mmio.R32[FLEXSPIA_DQS_SELECT_INPUT]
	FLEXSPIA_DATA0_SELECT_INPUT              mmio.R32[FLEXSPIA_DATA0_SELECT_INPUT]
	FLEXSPIA_DATA1_SELECT_INPUT              mmio.R32[FLEXSPIA_DATA1_SELECT_INPUT]
	FLEXSPIA_DATA2_SELECT_INPUT              mmio.R32[FLEXSPIA_DATA2_SELECT_INPUT]
	FLEXSPIA_DATA3_SELECT_INPUT              mmio.R32[FLEXSPIA_DATA3_SELECT_INPUT]
	FLEXSPIB_DATA0_SELECT_INPUT              mmio.R32[FLEXSPIB_DATA0_SELECT_INPUT]
	FLEXSPIB_DATA1_SELECT_INPUT              mmio.R32[FLEXSPIB_DATA1_SELECT_INPUT]
	FLEXSPIB_DATA2_SELECT_INPUT              mmio.R32[FLEXSPIB_DATA2_SELECT_INPUT]
	FLEXSPIB_DATA3_SELECT_INPUT              mmio.R32[FLEXSPIB_DATA3_SELECT_INPUT]
	FLEXSPIA_SCK_SELECT_INPUT                mmio.R32[FLEXSPIA_SCK_SELECT_INPUT]
	LPI2C1_SCL_SELECT_INPUT                  mmio.R32[LPI2C1_SCL_SELECT_INPUT]
	LPI2C1_SDA_SELECT_INPUT                  mmio.R32[LPI2C1_SDA_SELECT_INPUT]
	LPI2C2_SCL_SELECT_INPUT                  mmio.R32[LPI2C2_SCL_SELECT_INPUT]
	LPI2C2_SDA_SELECT_INPUT                  mmio.R32[LPI2C2_SDA_SELECT_INPUT]
	LPI2C3_SCL_SELECT_INPUT                  mmio.R32[LPI2C3_SCL_SELECT_INPUT]
	LPI2C3_SDA_SELECT_INPUT                  mmio.R32[LPI2C3_SDA_SELECT_INPUT]
	LPI2C4_SCL_SELECT_INPUT                  mmio.R32[LPI2C4_SCL_SELECT_INPUT]
	LPI2C4_SDA_SELECT_INPUT                  mmio.R32[LPI2C4_SDA_SELECT_INPUT]
	LPSPI1_PCS0_SELECT_INPUT                 mmio.R32[LPSPI1_PCS0_SELECT_INPUT]
	LPSPI1_SCK_SELECT_INPUT                  mmio.R32[LPSPI1_SCK_SELECT_INPUT]
	LPSPI1_SDI_SELECT_INPUT                  mmio.R32[LPSPI1_SDI_SELECT_INPUT]
	LPSPI1_SDO_SELECT_INPUT                  mmio.R32[LPSPI1_SDO_SELECT_INPUT]
	LPSPI2_PCS0_SELECT_INPUT                 mmio.R32[LPSPI2_PCS0_SELECT_INPUT]
	LPSPI2_SCK_SELECT_INPUT                  mmio.R32[LPSPI2_SCK_SELECT_INPUT]
	LPSPI2_SDI_SELECT_INPUT                  mmio.R32[LPSPI2_SDI_SELECT_INPUT]
	LPSPI2_SDO_SELECT_INPUT                  mmio.R32[LPSPI2_SDO_SELECT_INPUT]
	LPSPI3_PCS0_SELECT_INPUT                 mmio.R32[LPSPI3_PCS0_SELECT_INPUT]
	LPSPI3_SCK_SELECT_INPUT                  mmio.R32[LPSPI3_SCK_SELECT_INPUT]
	LPSPI3_SDI_SELECT_INPUT                  mmio.R32[LPSPI3_SDI_SELECT_INPUT]
	LPSPI3_SDO_SELECT_INPUT                  mmio.R32[LPSPI3_SDO_SELECT_INPUT]
	LPSPI4_PCS0_SELECT_INPUT                 mmio.R32[LPSPI4_PCS0_SELECT_INPUT]
	LPSPI4_SCK_SELECT_INPUT                  mmio.R32[LPSPI4_SCK_SELECT_INPUT]
	LPSPI4_SDI_SELECT_INPUT                  mmio.R32[LPSPI4_SDI_SELECT_INPUT]
	LPSPI4_SDO_SELECT_INPUT                  mmio.R32[LPSPI4_SDO_SELECT_INPUT]
	LPUART2_RX_SELECT_INPUT                  mmio.R32[LPUART2_RX_SELECT_INPUT]
	LPUART2_TX_SELECT_INPUT                  mmio.R32[LPUART2_TX_SELECT_INPUT]
	LPUART3_CTS_B_SELECT_INPUT               mmio.R32[LPUART3_CTS_B_SELECT_INPUT]
	LPUART3_RX_SELECT_INPUT                  mmio.R32[LPUART3_RX_SELECT_INPUT]
	LPUART3_TX_SELECT_INPUT                  mmio.R32[LPUART3_TX_SELECT_INPUT]
	LPUART4_RX_SELECT_INPUT                  mmio.R32[LPUART4_RX_SELECT_INPUT]
	LPUART4_TX_SELECT_INPUT                  mmio.R32[LPUART4_TX_SELECT_INPUT]
	LPUART5_RX_SELECT_INPUT                  mmio.R32[LPUART5_RX_SELECT_INPUT]
	LPUART5_TX_SELECT_INPUT                  mmio.R32[LPUART5_TX_SELECT_INPUT]
	LPUART6_RX_SELECT_INPUT                  mmio.R32[LPUART6_RX_SELECT_INPUT]
	LPUART6_TX_SELECT_INPUT                  mmio.R32[LPUART6_TX_SELECT_INPUT]
	LPUART7_RX_SELECT_INPUT                  mmio.R32[LPUART7_RX_SELECT_INPUT]
	LPUART7_TX_SELECT_INPUT                  mmio.R32[LPUART7_TX_SELECT_INPUT]
	LPUART8_RX_SELECT_INPUT                  mmio.R32[LPUART8_RX_SELECT_INPUT]
	LPUART8_TX_SELECT_INPUT                  mmio.R32[LPUART8_TX_SELECT_INPUT]
	NMI_SELECT_INPUT                         mmio.R32[NMI_SELECT_INPUT]
	QTIMER2_TIMER0_SELECT_INPUT              mmio.R32[QTIMER2_TIMER0_SELECT_INPUT]
	QTIMER2_TIMER1_SELECT_INPUT              mmio.R32[QTIMER2_TIMER1_SELECT_INPUT]
	QTIMER2_TIMER2_SELECT_INPUT              mmio.R32[QTIMER2_TIMER2_SELECT_INPUT]
	QTIMER2_TIMER3_SELECT_INPUT              mmio.R32[QTIMER2_TIMER3_SELECT_INPUT]
	QTIMER3_TIMER0_SELECT_INPUT              mmio.R32[QTIMER3_TIMER0_SELECT_INPUT]
	QTIMER3_TIMER1_SELECT_INPUT              mmio.R32[QTIMER3_TIMER1_SELECT_INPUT]
	QTIMER3_TIMER2_SELECT_INPUT              mmio.R32[QTIMER3_TIMER2_SELECT_INPUT]
	QTIMER3_TIMER3_SELECT_INPUT              mmio.R32[QTIMER3_TIMER3_SELECT_INPUT]
	SAI1_MCLK2_SELECT_INPUT                  mmio.R32[SAI1_MCLK2_SELECT_INPUT]
	SAI1_RX_BCLK_SELECT_INPUT                mmio.R32[SAI1_RX_BCLK_SELECT_INPUT]
	SAI1_RX_DATA0_SELECT_INPUT               mmio.R32[SAI1_RX_DATA0_SELECT_INPUT]
	SAI1_RX_DATA1_SELECT_INPUT               mmio.R32[SAI1_RX_DATA1_SELECT_INPUT]
	SAI1_RX_DATA2_SELECT_INPUT               mmio.R32[SAI1_RX_DATA2_SELECT_INPUT]
	SAI1_RX_DATA3_SELECT_INPUT               mmio.R32[SAI1_RX_DATA3_SELECT_INPUT]
	SAI1_RX_SYNC_SELECT_INPUT                mmio.R32[SAI1_RX_SYNC_SELECT_INPUT]
	SAI1_TX_BCLK_SELECT_INPUT                mmio.R32[SAI1_TX_BCLK_SELECT_INPUT]
	SAI1_TX_SYNC_SELECT_INPUT                mmio.R32[SAI1_TX_SYNC_SELECT_INPUT]
	SAI2_MCLK2_SELECT_INPUT                  mmio.R32[SAI2_MCLK2_SELECT_INPUT]
	SAI2_RX_BCLK_SELECT_INPUT                mmio.R32[SAI2_RX_BCLK_SELECT_INPUT]
	SAI2_RX_DATA0_SELECT_INPUT               mmio.R32[SAI2_RX_DATA0_SELECT_INPUT]
	SAI2_RX_SYNC_SELECT_INPUT                mmio.R32[SAI2_RX_SYNC_SELECT_INPUT]
	SAI2_TX_BCLK_SELECT_INPUT                mmio.R32[SAI2_TX_BCLK_SELECT_INPUT]
	SAI2_TX_SYNC_SELECT_INPUT                mmio.R32[SAI2_TX_SYNC_SELECT_INPUT]
	SPDIF_IN_SELECT_INPUT                    mmio.R32[SPDIF_IN_SELECT_INPUT]
	USB_OTG2_OC_SELECT_INPUT                 mmio.R32[USB_OTG2_OC_SELECT_INPUT]
	USB_OTG1_OC_SELECT_INPUT                 mmio.R32[USB_OTG1_OC_SELECT_INPUT]
	USDHC1_CD_B_SELECT_INPUT                 mmio.R32[USDHC1_CD_B_SELECT_INPUT]
	USDHC1_WP_SELECT_INPUT                   mmio.R32[USDHC1_WP_SELECT_INPUT]
	USDHC2_CLK_SELECT_INPUT                  mmio.R32[USDHC2_CLK_SELECT_INPUT]
	USDHC2_CD_B_SELECT_INPUT                 mmio.R32[USDHC2_CD_B_SELECT_INPUT]
	USDHC2_CMD_SELECT_INPUT                  mmio.R32[USDHC2_CMD_SELECT_INPUT]
	USDHC2_DATA0_SELECT_INPUT                mmio.R32[USDHC2_DATA0_SELECT_INPUT]
	USDHC2_DATA1_SELECT_INPUT                mmio.R32[USDHC2_DATA1_SELECT_INPUT]
	USDHC2_DATA2_SELECT_INPUT                mmio.R32[USDHC2_DATA2_SELECT_INPUT]
	USDHC2_DATA3_SELECT_INPUT                mmio.R32[USDHC2_DATA3_SELECT_INPUT]
	USDHC2_DATA4_SELECT_INPUT                mmio.R32[USDHC2_DATA4_SELECT_INPUT]
	USDHC2_DATA5_SELECT_INPUT                mmio.R32[USDHC2_DATA5_SELECT_INPUT]
	USDHC2_DATA6_SELECT_INPUT                mmio.R32[USDHC2_DATA6_SELECT_INPUT]
	USDHC2_DATA7_SELECT_INPUT                mmio.R32[USDHC2_DATA7_SELECT_INPUT]
	USDHC2_WP_SELECT_INPUT                   mmio.R32[USDHC2_WP_SELECT_INPUT]
	XBAR1_IN02_SELECT_INPUT                  mmio.R32[XBAR1_IN02_SELECT_INPUT]
	XBAR1_IN03_SELECT_INPUT                  mmio.R32[XBAR1_IN03_SELECT_INPUT]
	XBAR1_IN04_SELECT_INPUT                  mmio.R32[XBAR1_IN04_SELECT_INPUT]
	XBAR1_IN05_SELECT_INPUT                  mmio.R32[XBAR1_IN05_SELECT_INPUT]
	XBAR1_IN06_SELECT_INPUT                  mmio.R32[XBAR1_IN06_SELECT_INPUT]
	XBAR1_IN07_SELECT_INPUT                  mmio.R32[XBAR1_IN07_SELECT_INPUT]
	XBAR1_IN08_SELECT_INPUT                  mmio.R32[XBAR1_IN08_SELECT_INPUT]
	XBAR1_IN09_SELECT_INPUT                  mmio.R32[XBAR1_IN09_SELECT_INPUT]
	XBAR1_IN17_SELECT_INPUT                  mmio.R32[XBAR1_IN17_SELECT_INPUT]
	XBAR1_IN18_SELECT_INPUT                  mmio.R32[XBAR1_IN18_SELECT_INPUT]
	XBAR1_IN20_SELECT_INPUT                  mmio.R32[XBAR1_IN20_SELECT_INPUT]
	XBAR1_IN22_SELECT_INPUT                  mmio.R32[XBAR1_IN22_SELECT_INPUT]
	XBAR1_IN23_SELECT_INPUT                  mmio.R32[XBAR1_IN23_SELECT_INPUT]
	XBAR1_IN24_SELECT_INPUT                  mmio.R32[XBAR1_IN24_SELECT_INPUT]
	XBAR1_IN14_SELECT_INPUT                  mmio.R32[XBAR1_IN14_SELECT_INPUT]
	XBAR1_IN15_SELECT_INPUT                  mmio.R32[XBAR1_IN15_SELECT_INPUT]
	XBAR1_IN16_SELECT_INPUT                  mmio.R32[XBAR1_IN16_SELECT_INPUT]
	XBAR1_IN25_SELECT_INPUT                  mmio.R32[XBAR1_IN25_SELECT_INPUT]
	XBAR1_IN19_SELECT_INPUT                  mmio.R32[XBAR1_IN19_SELECT_INPUT]
	XBAR1_IN21_SELECT_INPUT                  mmio.R32[XBAR1_IN21_SELECT_INPUT]
	SW_MUX_CTL_PAD_GPIO_SPI_B0_00            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B0_01            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B0_02            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B0_03            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B0_04            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B0_05            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B0_06            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B0_07            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B0_08            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B0_09            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B0_10            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B0_11            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B0_12            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B0_13            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B1_00            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B1_01            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B1_02            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B1_03            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B1_04            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B1_05            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B1_06            mmio.R32[SW_MUX_CTL]
	SW_MUX_CTL_PAD_GPIO_SPI_B1_07            mmio.R32[SW_MUX_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B0_00            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B0_01            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B0_02            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B0_03            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B0_04            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B0_05            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B0_06            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B0_07            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B0_08            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B0_09            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B0_10            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B0_11            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B0_12            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B0_13            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B1_00            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B1_01            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B1_02            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B1_03            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B1_04            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B1_05            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B1_06            mmio.R32[SW_PAD_CTL]
	SW_PAD_CTL_PAD_GPIO_SPI_B1_07            mmio.R32[SW_PAD_CTL]
	ENET2_IPG_CLK_RMII_SELECT_INPUT          mmio.R32[ENET2_IPG_CLK_RMII_SELECT_INPUT]
	ENET2_IPP_IND_MAC0_MDIO_SELECT_INPUT     mmio.R32[ENET2_IPP_IND_MAC0_MDIO_SELECT_INPUT]
	ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_0 mmio.R32[ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_0]
	ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_1 mmio.R32[ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_1]
	ENET2_IPP_IND_MAC0_RXEN_SELECT_INPUT     mmio.R32[ENET2_IPP_IND_MAC0_RXEN_SELECT_INPUT]
	ENET2_IPP_IND_MAC0_RXERR_SELECT_INPUT    mmio.R32[ENET2_IPP_IND_MAC0_RXERR_SELECT_INPUT]
	ENET2_IPP_IND_MAC0_TIMER_SELECT_INPUT_0  mmio.R32[ENET2_IPP_IND_MAC0_TIMER_SELECT_INPUT_0]
	ENET2_IPP_IND_MAC0_TXCLK_SELECT_INPUT    mmio.R32[ENET2_IPP_IND_MAC0_TXCLK_SELECT_INPUT]
	FLEXSPI2_IPP_IND_DQS_FA_SELECT_INPUT     mmio.R32[FLEXSPI2_IPP_IND_DQS_FA_SELECT_INPUT]
	FLEXSPI2_IPP_IND_IO_FA_BIT0_SELECT_INPUT mmio.R32[FLEXSPI2_IPP_IND_IO_FA_BIT0_SELECT_INPUT]
	FLEXSPI2_IPP_IND_IO_FA_BIT1_SELECT_INPUT mmio.R32[FLEXSPI2_IPP_IND_IO_FA_BIT1_SELECT_INPUT]
	FLEXSPI2_IPP_IND_IO_FA_BIT2_SELECT_INPUT mmio.R32[FLEXSPI2_IPP_IND_IO_FA_BIT2_SELECT_INPUT]
	FLEXSPI2_IPP_IND_IO_FA_BIT3_SELECT_INPUT mmio.R32[FLEXSPI2_IPP_IND_IO_FA_BIT3_SELECT_INPUT]
	FLEXSPI2_IPP_IND_IO_FB_BIT0_SELECT_INPUT mmio.R32[FLEXSPI2_IPP_IND_IO_FB_BIT0_SELECT_INPUT]
	FLEXSPI2_IPP_IND_IO_FB_BIT1_SELECT_INPUT mmio.R32[FLEXSPI2_IPP_IND_IO_FB_BIT1_SELECT_INPUT]
	FLEXSPI2_IPP_IND_IO_FB_BIT2_SELECT_INPUT mmio.R32[FLEXSPI2_IPP_IND_IO_FB_BIT2_SELECT_INPUT]
	FLEXSPI2_IPP_IND_IO_FB_BIT3_SELECT_INPUT mmio.R32[FLEXSPI2_IPP_IND_IO_FB_BIT3_SELECT_INPUT]
	FLEXSPI2_IPP_IND_SCK_FA_SELECT_INPUT     mmio.R32[FLEXSPI2_IPP_IND_SCK_FA_SELECT_INPUT]
	FLEXSPI2_IPP_IND_SCK_FB_SELECT_INPUT     mmio.R32[FLEXSPI2_IPP_IND_SCK_FB_SELECT_INPUT]
	GPT1_IPP_IND_CAPIN1_SELECT_INPUT         mmio.R32[GPT1_IPP_IND_CAPIN1_SELECT_INPUT]
	GPT1_IPP_IND_CAPIN2_SELECT_INPUT         mmio.R32[GPT1_IPP_IND_CAPIN2_SELECT_INPUT]
	GPT1_IPP_IND_CLKIN_SELECT_INPUT          mmio.R32[GPT1_IPP_IND_CLKIN_SELECT_INPUT]
	GPT2_IPP_IND_CAPIN1_SELECT_INPUT         mmio.R32[GPT2_IPP_IND_CAPIN1_SELECT_INPUT]
	GPT2_IPP_IND_CAPIN2_SELECT_INPUT         mmio.R32[GPT2_IPP_IND_CAPIN2_SELECT_INPUT]
	GPT2_IPP_IND_CLKIN_SELECT_INPUT          mmio.R32[GPT2_IPP_IND_CLKIN_SELECT_INPUT]
	SAI3_IPG_CLK_SAI_MCLK_SELECT_INPUT_2     mmio.R32[SAI3_IPG_CLK_SAI_MCLK_SELECT_INPUT_2]
	SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT     mmio.R32[SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT]
	SAI3_IPP_IND_SAI_RXDATA_SELECT_INPUT_0   mmio.R32[SAI3_IPP_IND_SAI_RXDATA_SELECT_INPUT_0]
	SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT     mmio.R32[SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT]
	SAI3_IPP_IND_SAI_TXBCLK_SELECT_INPUT     mmio.R32[SAI3_IPP_IND_SAI_TXBCLK_SELECT_INPUT]
	SAI3_IPP_IND_SAI_TXSYNC_SELECT_INPUT     mmio.R32[SAI3_IPP_IND_SAI_TXSYNC_SELECT_INPUT]
	SEMC_I_IPP_IND_DQS4_SELECT_INPUT         mmio.R32[SEMC_I_IPP_IND_DQS4_SELECT_INPUT]
	CANFD_IPP_IND_CANRX_SELECT_INPUT         mmio.R32[CANFD_IPP_IND_CANRX_SELECT_INPUT]
}

func IOMUXC() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.IOMUXC_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

type SW_MUX_CTL uint32

type SW_PAD_CTL uint32

type ANATOP_USB_OTG1_ID_SELECT_INPUT uint32

func ANATOP_USB_OTG1_ID_DAISY_(p *Periph) mmio.RM32[ANATOP_USB_OTG1_ID_SELECT_INPUT] {
	return mmio.RM32[ANATOP_USB_OTG1_ID_SELECT_INPUT]{R: &p.ANATOP_USB_OTG1_ID_SELECT_INPUT, Mask: ANATOP_USB_OTG1_ID_DAISY}
}

type ANATOP_USB_OTG2_ID_SELECT_INPUT uint32

func ANATOP_USB_OTG2_ID_DAISY_(p *Periph) mmio.RM32[ANATOP_USB_OTG2_ID_SELECT_INPUT] {
	return mmio.RM32[ANATOP_USB_OTG2_ID_SELECT_INPUT]{R: &p.ANATOP_USB_OTG2_ID_SELECT_INPUT, Mask: ANATOP_USB_OTG2_ID_DAISY}
}

type CCM_PMIC_READY_SELECT_INPUT uint32

func CCM_PMIC_READY_DAISY_(p *Periph) mmio.RM32[CCM_PMIC_READY_SELECT_INPUT] {
	return mmio.RM32[CCM_PMIC_READY_SELECT_INPUT]{R: &p.CCM_PMIC_READY_SELECT_INPUT, Mask: CCM_PMIC_READY_DAISY}
}

type CSI_DATA02_SELECT_INPUT uint32

func CSI_DATA02_DAISY_(p *Periph) mmio.RM32[CSI_DATA02_SELECT_INPUT] {
	return mmio.RM32[CSI_DATA02_SELECT_INPUT]{R: &p.CSI_DATA02_SELECT_INPUT, Mask: CSI_DATA02_DAISY}
}

type CSI_DATA03_SELECT_INPUT uint32

func CSI_DATA03_DAISY_(p *Periph) mmio.RM32[CSI_DATA03_SELECT_INPUT] {
	return mmio.RM32[CSI_DATA03_SELECT_INPUT]{R: &p.CSI_DATA03_SELECT_INPUT, Mask: CSI_DATA03_DAISY}
}

type CSI_DATA04_SELECT_INPUT uint32

func CSI_DATA04_DAISY_(p *Periph) mmio.RM32[CSI_DATA04_SELECT_INPUT] {
	return mmio.RM32[CSI_DATA04_SELECT_INPUT]{R: &p.CSI_DATA04_SELECT_INPUT, Mask: CSI_DATA04_DAISY}
}

type CSI_DATA05_SELECT_INPUT uint32

func CSI_DATA05_DAISY_(p *Periph) mmio.RM32[CSI_DATA05_SELECT_INPUT] {
	return mmio.RM32[CSI_DATA05_SELECT_INPUT]{R: &p.CSI_DATA05_SELECT_INPUT, Mask: CSI_DATA05_DAISY}
}

type CSI_DATA06_SELECT_INPUT uint32

func CSI_DATA06_DAISY_(p *Periph) mmio.RM32[CSI_DATA06_SELECT_INPUT] {
	return mmio.RM32[CSI_DATA06_SELECT_INPUT]{R: &p.CSI_DATA06_SELECT_INPUT, Mask: CSI_DATA06_DAISY}
}

type CSI_DATA07_SELECT_INPUT uint32

func CSI_DATA07_DAISY_(p *Periph) mmio.RM32[CSI_DATA07_SELECT_INPUT] {
	return mmio.RM32[CSI_DATA07_SELECT_INPUT]{R: &p.CSI_DATA07_SELECT_INPUT, Mask: CSI_DATA07_DAISY}
}

type CSI_DATA08_SELECT_INPUT uint32

func CSI_DATA08_DAISY_(p *Periph) mmio.RM32[CSI_DATA08_SELECT_INPUT] {
	return mmio.RM32[CSI_DATA08_SELECT_INPUT]{R: &p.CSI_DATA08_SELECT_INPUT, Mask: CSI_DATA08_DAISY}
}

type CSI_DATA09_SELECT_INPUT uint32

func CSI_DATA09_DAISY_(p *Periph) mmio.RM32[CSI_DATA09_SELECT_INPUT] {
	return mmio.RM32[CSI_DATA09_SELECT_INPUT]{R: &p.CSI_DATA09_SELECT_INPUT, Mask: CSI_DATA09_DAISY}
}

type CSI_HSYNC_SELECT_INPUT uint32

func CSI_HSYNC_DAISY_(p *Periph) mmio.RM32[CSI_HSYNC_SELECT_INPUT] {
	return mmio.RM32[CSI_HSYNC_SELECT_INPUT]{R: &p.CSI_HSYNC_SELECT_INPUT, Mask: CSI_HSYNC_DAISY}
}

type CSI_PIXCLK_SELECT_INPUT uint32

func CSI_PIXCLK_DAISY_(p *Periph) mmio.RM32[CSI_PIXCLK_SELECT_INPUT] {
	return mmio.RM32[CSI_PIXCLK_SELECT_INPUT]{R: &p.CSI_PIXCLK_SELECT_INPUT, Mask: CSI_PIXCLK_DAISY}
}

type CSI_VSYNC_SELECT_INPUT uint32

func CSI_VSYNC_DAISY_(p *Periph) mmio.RM32[CSI_VSYNC_SELECT_INPUT] {
	return mmio.RM32[CSI_VSYNC_SELECT_INPUT]{R: &p.CSI_VSYNC_SELECT_INPUT, Mask: CSI_VSYNC_DAISY}
}

type ENET_IPG_CLK_RMII_SELECT_INPUT uint32

func ENET_IPG_CLK_RMII_DAISY_(p *Periph) mmio.RM32[ENET_IPG_CLK_RMII_SELECT_INPUT] {
	return mmio.RM32[ENET_IPG_CLK_RMII_SELECT_INPUT]{R: &p.ENET_IPG_CLK_RMII_SELECT_INPUT, Mask: ENET_IPG_CLK_RMII_DAISY}
}

type ENET_MDIO_SELECT_INPUT uint32

func ENET_MDIO_DAISY_(p *Periph) mmio.RM32[ENET_MDIO_SELECT_INPUT] {
	return mmio.RM32[ENET_MDIO_SELECT_INPUT]{R: &p.ENET_MDIO_SELECT_INPUT, Mask: ENET_MDIO_DAISY}
}

type ENET0_RXDATA_SELECT_INPUT uint32

func ENET0_RXDATA_DAISY_(p *Periph) mmio.RM32[ENET0_RXDATA_SELECT_INPUT] {
	return mmio.RM32[ENET0_RXDATA_SELECT_INPUT]{R: &p.ENET0_RXDATA_SELECT_INPUT, Mask: ENET0_RXDATA_DAISY}
}

type ENET1_RXDATA_SELECT_INPUT uint32

func ENET1_RXDATA_DAISY_(p *Periph) mmio.RM32[ENET1_RXDATA_SELECT_INPUT] {
	return mmio.RM32[ENET1_RXDATA_SELECT_INPUT]{R: &p.ENET1_RXDATA_SELECT_INPUT, Mask: ENET1_RXDATA_DAISY}
}

type ENET_RXEN_SELECT_INPUT uint32

func ENET_RXEN_DAISY_(p *Periph) mmio.RM32[ENET_RXEN_SELECT_INPUT] {
	return mmio.RM32[ENET_RXEN_SELECT_INPUT]{R: &p.ENET_RXEN_SELECT_INPUT, Mask: ENET_RXEN_DAISY}
}

type ENET_RXERR_SELECT_INPUT uint32

func ENET_RXERR_DAISY_(p *Periph) mmio.RM32[ENET_RXERR_SELECT_INPUT] {
	return mmio.RM32[ENET_RXERR_SELECT_INPUT]{R: &p.ENET_RXERR_SELECT_INPUT, Mask: ENET_RXERR_DAISY}
}

type ENET0_TIMER_SELECT_INPUT uint32

func ENET0_TIMER_DAISY_(p *Periph) mmio.RM32[ENET0_TIMER_SELECT_INPUT] {
	return mmio.RM32[ENET0_TIMER_SELECT_INPUT]{R: &p.ENET0_TIMER_SELECT_INPUT, Mask: ENET0_TIMER_DAISY}
}

type ENET_TXCLK_SELECT_INPUT uint32

func ENET_TXCLK_DAISY_(p *Periph) mmio.RM32[ENET_TXCLK_SELECT_INPUT] {
	return mmio.RM32[ENET_TXCLK_SELECT_INPUT]{R: &p.ENET_TXCLK_SELECT_INPUT, Mask: ENET_TXCLK_DAISY}
}

type FLEXCAN1_RX_SELECT_INPUT uint32

func FLEXCAN1_RX_DAISY_(p *Periph) mmio.RM32[FLEXCAN1_RX_SELECT_INPUT] {
	return mmio.RM32[FLEXCAN1_RX_SELECT_INPUT]{R: &p.FLEXCAN1_RX_SELECT_INPUT, Mask: FLEXCAN1_RX_DAISY}
}

type FLEXCAN2_RX_SELECT_INPUT uint32

func FLEXCAN2_RX_DAISY_(p *Periph) mmio.RM32[FLEXCAN2_RX_SELECT_INPUT] {
	return mmio.RM32[FLEXCAN2_RX_SELECT_INPUT]{R: &p.FLEXCAN2_RX_SELECT_INPUT, Mask: FLEXCAN2_RX_DAISY}
}

type FLEXPWM1_PWMA3_SELECT_INPUT uint32

func FLEXPWM1_PWMA3_DAISY_(p *Periph) mmio.RM32[FLEXPWM1_PWMA3_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM1_PWMA3_SELECT_INPUT]{R: &p.FLEXPWM1_PWMA3_SELECT_INPUT, Mask: FLEXPWM1_PWMA3_DAISY}
}

type FLEXPWM1_PWMA0_SELECT_INPUT uint32

func FLEXPWM1_PWMA0_DAISY_(p *Periph) mmio.RM32[FLEXPWM1_PWMA0_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM1_PWMA0_SELECT_INPUT]{R: &p.FLEXPWM1_PWMA0_SELECT_INPUT, Mask: FLEXPWM1_PWMA0_DAISY}
}

type FLEXPWM1_PWMA1_SELECT_INPUT uint32

func FLEXPWM1_PWMA1_DAISY_(p *Periph) mmio.RM32[FLEXPWM1_PWMA1_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM1_PWMA1_SELECT_INPUT]{R: &p.FLEXPWM1_PWMA1_SELECT_INPUT, Mask: FLEXPWM1_PWMA1_DAISY}
}

type FLEXPWM1_PWMA2_SELECT_INPUT uint32

func FLEXPWM1_PWMA2_DAISY_(p *Periph) mmio.RM32[FLEXPWM1_PWMA2_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM1_PWMA2_SELECT_INPUT]{R: &p.FLEXPWM1_PWMA2_SELECT_INPUT, Mask: FLEXPWM1_PWMA2_DAISY}
}

type FLEXPWM1_PWMB3_SELECT_INPUT uint32

func FLEXPWM1_PWMB3_DAISY_(p *Periph) mmio.RM32[FLEXPWM1_PWMB3_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM1_PWMB3_SELECT_INPUT]{R: &p.FLEXPWM1_PWMB3_SELECT_INPUT, Mask: FLEXPWM1_PWMB3_DAISY}
}

type FLEXPWM1_PWMB0_SELECT_INPUT uint32

func FLEXPWM1_PWMB0_DAISY_(p *Periph) mmio.RM32[FLEXPWM1_PWMB0_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM1_PWMB0_SELECT_INPUT]{R: &p.FLEXPWM1_PWMB0_SELECT_INPUT, Mask: FLEXPWM1_PWMB0_DAISY}
}

type FLEXPWM1_PWMB1_SELECT_INPUT uint32

func FLEXPWM1_PWMB1_DAISY_(p *Periph) mmio.RM32[FLEXPWM1_PWMB1_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM1_PWMB1_SELECT_INPUT]{R: &p.FLEXPWM1_PWMB1_SELECT_INPUT, Mask: FLEXPWM1_PWMB1_DAISY}
}

type FLEXPWM1_PWMB2_SELECT_INPUT uint32

func FLEXPWM1_PWMB2_DAISY_(p *Periph) mmio.RM32[FLEXPWM1_PWMB2_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM1_PWMB2_SELECT_INPUT]{R: &p.FLEXPWM1_PWMB2_SELECT_INPUT, Mask: FLEXPWM1_PWMB2_DAISY}
}

type FLEXPWM2_PWMA3_SELECT_INPUT uint32

func FLEXPWM2_PWMA3_DAISY_(p *Periph) mmio.RM32[FLEXPWM2_PWMA3_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM2_PWMA3_SELECT_INPUT]{R: &p.FLEXPWM2_PWMA3_SELECT_INPUT, Mask: FLEXPWM2_PWMA3_DAISY}
}

type FLEXPWM2_PWMA0_SELECT_INPUT uint32

func FLEXPWM2_PWMA0_DAISY_(p *Periph) mmio.RM32[FLEXPWM2_PWMA0_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM2_PWMA0_SELECT_INPUT]{R: &p.FLEXPWM2_PWMA0_SELECT_INPUT, Mask: FLEXPWM2_PWMA0_DAISY}
}

type FLEXPWM2_PWMA1_SELECT_INPUT uint32

func FLEXPWM2_PWMA1_DAISY_(p *Periph) mmio.RM32[FLEXPWM2_PWMA1_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM2_PWMA1_SELECT_INPUT]{R: &p.FLEXPWM2_PWMA1_SELECT_INPUT, Mask: FLEXPWM2_PWMA1_DAISY}
}

type FLEXPWM2_PWMA2_SELECT_INPUT uint32

func FLEXPWM2_PWMA2_DAISY_(p *Periph) mmio.RM32[FLEXPWM2_PWMA2_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM2_PWMA2_SELECT_INPUT]{R: &p.FLEXPWM2_PWMA2_SELECT_INPUT, Mask: FLEXPWM2_PWMA2_DAISY}
}

type FLEXPWM2_PWMB3_SELECT_INPUT uint32

func FLEXPWM2_PWMB3_DAISY_(p *Periph) mmio.RM32[FLEXPWM2_PWMB3_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM2_PWMB3_SELECT_INPUT]{R: &p.FLEXPWM2_PWMB3_SELECT_INPUT, Mask: FLEXPWM2_PWMB3_DAISY}
}

type FLEXPWM2_PWMB0_SELECT_INPUT uint32

func FLEXPWM2_PWMB0_DAISY_(p *Periph) mmio.RM32[FLEXPWM2_PWMB0_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM2_PWMB0_SELECT_INPUT]{R: &p.FLEXPWM2_PWMB0_SELECT_INPUT, Mask: FLEXPWM2_PWMB0_DAISY}
}

type FLEXPWM2_PWMB1_SELECT_INPUT uint32

func FLEXPWM2_PWMB1_DAISY_(p *Periph) mmio.RM32[FLEXPWM2_PWMB1_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM2_PWMB1_SELECT_INPUT]{R: &p.FLEXPWM2_PWMB1_SELECT_INPUT, Mask: FLEXPWM2_PWMB1_DAISY}
}

type FLEXPWM2_PWMB2_SELECT_INPUT uint32

func FLEXPWM2_PWMB2_DAISY_(p *Periph) mmio.RM32[FLEXPWM2_PWMB2_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM2_PWMB2_SELECT_INPUT]{R: &p.FLEXPWM2_PWMB2_SELECT_INPUT, Mask: FLEXPWM2_PWMB2_DAISY}
}

type FLEXPWM4_PWMA0_SELECT_INPUT uint32

func FLEXPWM4_PWMA0_DAISY_(p *Periph) mmio.RM32[FLEXPWM4_PWMA0_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM4_PWMA0_SELECT_INPUT]{R: &p.FLEXPWM4_PWMA0_SELECT_INPUT, Mask: FLEXPWM4_PWMA0_DAISY}
}

type FLEXPWM4_PWMA1_SELECT_INPUT uint32

func FLEXPWM4_PWMA1_DAISY_(p *Periph) mmio.RM32[FLEXPWM4_PWMA1_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM4_PWMA1_SELECT_INPUT]{R: &p.FLEXPWM4_PWMA1_SELECT_INPUT, Mask: FLEXPWM4_PWMA1_DAISY}
}

type FLEXPWM4_PWMA2_SELECT_INPUT uint32

func FLEXPWM4_PWMA2_DAISY_(p *Periph) mmio.RM32[FLEXPWM4_PWMA2_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM4_PWMA2_SELECT_INPUT]{R: &p.FLEXPWM4_PWMA2_SELECT_INPUT, Mask: FLEXPWM4_PWMA2_DAISY}
}

type FLEXPWM4_PWMA3_SELECT_INPUT uint32

func FLEXPWM4_PWMA3_DAISY_(p *Periph) mmio.RM32[FLEXPWM4_PWMA3_SELECT_INPUT] {
	return mmio.RM32[FLEXPWM4_PWMA3_SELECT_INPUT]{R: &p.FLEXPWM4_PWMA3_SELECT_INPUT, Mask: FLEXPWM4_PWMA3_DAISY}
}

type FLEXSPIA_DQS_SELECT_INPUT uint32

func FLEXSPIA_DQS_DAISY_(p *Periph) mmio.RM32[FLEXSPIA_DQS_SELECT_INPUT] {
	return mmio.RM32[FLEXSPIA_DQS_SELECT_INPUT]{R: &p.FLEXSPIA_DQS_SELECT_INPUT, Mask: FLEXSPIA_DQS_DAISY}
}

type FLEXSPIA_DATA0_SELECT_INPUT uint32

func FLEXSPIA_DATA0_DAISY_(p *Periph) mmio.RM32[FLEXSPIA_DATA0_SELECT_INPUT] {
	return mmio.RM32[FLEXSPIA_DATA0_SELECT_INPUT]{R: &p.FLEXSPIA_DATA0_SELECT_INPUT, Mask: FLEXSPIA_DATA0_DAISY}
}

type FLEXSPIA_DATA1_SELECT_INPUT uint32

func FLEXSPIA_DATA1_DAISY_(p *Periph) mmio.RM32[FLEXSPIA_DATA1_SELECT_INPUT] {
	return mmio.RM32[FLEXSPIA_DATA1_SELECT_INPUT]{R: &p.FLEXSPIA_DATA1_SELECT_INPUT, Mask: FLEXSPIA_DATA1_DAISY}
}

type FLEXSPIA_DATA2_SELECT_INPUT uint32

func FLEXSPIA_DATA2_DAISY_(p *Periph) mmio.RM32[FLEXSPIA_DATA2_SELECT_INPUT] {
	return mmio.RM32[FLEXSPIA_DATA2_SELECT_INPUT]{R: &p.FLEXSPIA_DATA2_SELECT_INPUT, Mask: FLEXSPIA_DATA2_DAISY}
}

type FLEXSPIA_DATA3_SELECT_INPUT uint32

func FLEXSPIA_DATA3_DAISY_(p *Periph) mmio.RM32[FLEXSPIA_DATA3_SELECT_INPUT] {
	return mmio.RM32[FLEXSPIA_DATA3_SELECT_INPUT]{R: &p.FLEXSPIA_DATA3_SELECT_INPUT, Mask: FLEXSPIA_DATA3_DAISY}
}

type FLEXSPIB_DATA0_SELECT_INPUT uint32

func FLEXSPIB_DATA0_DAISY_(p *Periph) mmio.RM32[FLEXSPIB_DATA0_SELECT_INPUT] {
	return mmio.RM32[FLEXSPIB_DATA0_SELECT_INPUT]{R: &p.FLEXSPIB_DATA0_SELECT_INPUT, Mask: FLEXSPIB_DATA0_DAISY}
}

type FLEXSPIB_DATA1_SELECT_INPUT uint32

func FLEXSPIB_DATA1_DAISY_(p *Periph) mmio.RM32[FLEXSPIB_DATA1_SELECT_INPUT] {
	return mmio.RM32[FLEXSPIB_DATA1_SELECT_INPUT]{R: &p.FLEXSPIB_DATA1_SELECT_INPUT, Mask: FLEXSPIB_DATA1_DAISY}
}

type FLEXSPIB_DATA2_SELECT_INPUT uint32

func FLEXSPIB_DATA2_DAISY_(p *Periph) mmio.RM32[FLEXSPIB_DATA2_SELECT_INPUT] {
	return mmio.RM32[FLEXSPIB_DATA2_SELECT_INPUT]{R: &p.FLEXSPIB_DATA2_SELECT_INPUT, Mask: FLEXSPIB_DATA2_DAISY}
}

type FLEXSPIB_DATA3_SELECT_INPUT uint32

func FLEXSPIB_DATA3_DAISY_(p *Periph) mmio.RM32[FLEXSPIB_DATA3_SELECT_INPUT] {
	return mmio.RM32[FLEXSPIB_DATA3_SELECT_INPUT]{R: &p.FLEXSPIB_DATA3_SELECT_INPUT, Mask: FLEXSPIB_DATA3_DAISY}
}

type FLEXSPIA_SCK_SELECT_INPUT uint32

func FLEXSPIA_SCK_DAISY_(p *Periph) mmio.RM32[FLEXSPIA_SCK_SELECT_INPUT] {
	return mmio.RM32[FLEXSPIA_SCK_SELECT_INPUT]{R: &p.FLEXSPIA_SCK_SELECT_INPUT, Mask: FLEXSPIA_SCK_DAISY}
}

type LPI2C1_SCL_SELECT_INPUT uint32

func LPI2C1_SCL_DAISY_(p *Periph) mmio.RM32[LPI2C1_SCL_SELECT_INPUT] {
	return mmio.RM32[LPI2C1_SCL_SELECT_INPUT]{R: &p.LPI2C1_SCL_SELECT_INPUT, Mask: LPI2C1_SCL_DAISY}
}

type LPI2C1_SDA_SELECT_INPUT uint32

func LPI2C1_SDA_DAISY_(p *Periph) mmio.RM32[LPI2C1_SDA_SELECT_INPUT] {
	return mmio.RM32[LPI2C1_SDA_SELECT_INPUT]{R: &p.LPI2C1_SDA_SELECT_INPUT, Mask: LPI2C1_SDA_DAISY}
}

type LPI2C2_SCL_SELECT_INPUT uint32

func LPI2C2_SCL_DAISY_(p *Periph) mmio.RM32[LPI2C2_SCL_SELECT_INPUT] {
	return mmio.RM32[LPI2C2_SCL_SELECT_INPUT]{R: &p.LPI2C2_SCL_SELECT_INPUT, Mask: LPI2C2_SCL_DAISY}
}

type LPI2C2_SDA_SELECT_INPUT uint32

func LPI2C2_SDA_DAISY_(p *Periph) mmio.RM32[LPI2C2_SDA_SELECT_INPUT] {
	return mmio.RM32[LPI2C2_SDA_SELECT_INPUT]{R: &p.LPI2C2_SDA_SELECT_INPUT, Mask: LPI2C2_SDA_DAISY}
}

type LPI2C3_SCL_SELECT_INPUT uint32

func LPI2C3_SCL_DAISY_(p *Periph) mmio.RM32[LPI2C3_SCL_SELECT_INPUT] {
	return mmio.RM32[LPI2C3_SCL_SELECT_INPUT]{R: &p.LPI2C3_SCL_SELECT_INPUT, Mask: LPI2C3_SCL_DAISY}
}

type LPI2C3_SDA_SELECT_INPUT uint32

func LPI2C3_SDA_DAISY_(p *Periph) mmio.RM32[LPI2C3_SDA_SELECT_INPUT] {
	return mmio.RM32[LPI2C3_SDA_SELECT_INPUT]{R: &p.LPI2C3_SDA_SELECT_INPUT, Mask: LPI2C3_SDA_DAISY}
}

type LPI2C4_SCL_SELECT_INPUT uint32

func LPI2C4_SCL_DAISY_(p *Periph) mmio.RM32[LPI2C4_SCL_SELECT_INPUT] {
	return mmio.RM32[LPI2C4_SCL_SELECT_INPUT]{R: &p.LPI2C4_SCL_SELECT_INPUT, Mask: LPI2C4_SCL_DAISY}
}

type LPI2C4_SDA_SELECT_INPUT uint32

func LPI2C4_SDA_DAISY_(p *Periph) mmio.RM32[LPI2C4_SDA_SELECT_INPUT] {
	return mmio.RM32[LPI2C4_SDA_SELECT_INPUT]{R: &p.LPI2C4_SDA_SELECT_INPUT, Mask: LPI2C4_SDA_DAISY}
}

type LPSPI1_PCS0_SELECT_INPUT uint32

func LPSPI1_PCS0_DAISY_(p *Periph) mmio.RM32[LPSPI1_PCS0_SELECT_INPUT] {
	return mmio.RM32[LPSPI1_PCS0_SELECT_INPUT]{R: &p.LPSPI1_PCS0_SELECT_INPUT, Mask: LPSPI1_PCS0_DAISY}
}

type LPSPI1_SCK_SELECT_INPUT uint32

func LPSPI1_SCK_DAISY_(p *Periph) mmio.RM32[LPSPI1_SCK_SELECT_INPUT] {
	return mmio.RM32[LPSPI1_SCK_SELECT_INPUT]{R: &p.LPSPI1_SCK_SELECT_INPUT, Mask: LPSPI1_SCK_DAISY}
}

type LPSPI1_SDI_SELECT_INPUT uint32

func LPSPI1_SDI_DAISY_(p *Periph) mmio.RM32[LPSPI1_SDI_SELECT_INPUT] {
	return mmio.RM32[LPSPI1_SDI_SELECT_INPUT]{R: &p.LPSPI1_SDI_SELECT_INPUT, Mask: LPSPI1_SDI_DAISY}
}

type LPSPI1_SDO_SELECT_INPUT uint32

func LPSPI1_SDO_DAISY_(p *Periph) mmio.RM32[LPSPI1_SDO_SELECT_INPUT] {
	return mmio.RM32[LPSPI1_SDO_SELECT_INPUT]{R: &p.LPSPI1_SDO_SELECT_INPUT, Mask: LPSPI1_SDO_DAISY}
}

type LPSPI2_PCS0_SELECT_INPUT uint32

func LPSPI2_PCS0_DAISY_(p *Periph) mmio.RM32[LPSPI2_PCS0_SELECT_INPUT] {
	return mmio.RM32[LPSPI2_PCS0_SELECT_INPUT]{R: &p.LPSPI2_PCS0_SELECT_INPUT, Mask: LPSPI2_PCS0_DAISY}
}

type LPSPI2_SCK_SELECT_INPUT uint32

func LPSPI2_SCK_DAISY_(p *Periph) mmio.RM32[LPSPI2_SCK_SELECT_INPUT] {
	return mmio.RM32[LPSPI2_SCK_SELECT_INPUT]{R: &p.LPSPI2_SCK_SELECT_INPUT, Mask: LPSPI2_SCK_DAISY}
}

type LPSPI2_SDI_SELECT_INPUT uint32

func LPSPI2_SDI_DAISY_(p *Periph) mmio.RM32[LPSPI2_SDI_SELECT_INPUT] {
	return mmio.RM32[LPSPI2_SDI_SELECT_INPUT]{R: &p.LPSPI2_SDI_SELECT_INPUT, Mask: LPSPI2_SDI_DAISY}
}

type LPSPI2_SDO_SELECT_INPUT uint32

func LPSPI2_SDO_DAISY_(p *Periph) mmio.RM32[LPSPI2_SDO_SELECT_INPUT] {
	return mmio.RM32[LPSPI2_SDO_SELECT_INPUT]{R: &p.LPSPI2_SDO_SELECT_INPUT, Mask: LPSPI2_SDO_DAISY}
}

type LPSPI3_PCS0_SELECT_INPUT uint32

func LPSPI3_PCS0_DAISY_(p *Periph) mmio.RM32[LPSPI3_PCS0_SELECT_INPUT] {
	return mmio.RM32[LPSPI3_PCS0_SELECT_INPUT]{R: &p.LPSPI3_PCS0_SELECT_INPUT, Mask: LPSPI3_PCS0_DAISY}
}

type LPSPI3_SCK_SELECT_INPUT uint32

func LPSPI3_SCK_DAISY_(p *Periph) mmio.RM32[LPSPI3_SCK_SELECT_INPUT] {
	return mmio.RM32[LPSPI3_SCK_SELECT_INPUT]{R: &p.LPSPI3_SCK_SELECT_INPUT, Mask: LPSPI3_SCK_DAISY}
}

type LPSPI3_SDI_SELECT_INPUT uint32

func LPSPI3_SDI_DAISY_(p *Periph) mmio.RM32[LPSPI3_SDI_SELECT_INPUT] {
	return mmio.RM32[LPSPI3_SDI_SELECT_INPUT]{R: &p.LPSPI3_SDI_SELECT_INPUT, Mask: LPSPI3_SDI_DAISY}
}

type LPSPI3_SDO_SELECT_INPUT uint32

func LPSPI3_SDO_DAISY_(p *Periph) mmio.RM32[LPSPI3_SDO_SELECT_INPUT] {
	return mmio.RM32[LPSPI3_SDO_SELECT_INPUT]{R: &p.LPSPI3_SDO_SELECT_INPUT, Mask: LPSPI3_SDO_DAISY}
}

type LPSPI4_PCS0_SELECT_INPUT uint32

func LPSPI4_PCS0_DAISY_(p *Periph) mmio.RM32[LPSPI4_PCS0_SELECT_INPUT] {
	return mmio.RM32[LPSPI4_PCS0_SELECT_INPUT]{R: &p.LPSPI4_PCS0_SELECT_INPUT, Mask: LPSPI4_PCS0_DAISY}
}

type LPSPI4_SCK_SELECT_INPUT uint32

func LPSPI4_SCK_DAISY_(p *Periph) mmio.RM32[LPSPI4_SCK_SELECT_INPUT] {
	return mmio.RM32[LPSPI4_SCK_SELECT_INPUT]{R: &p.LPSPI4_SCK_SELECT_INPUT, Mask: LPSPI4_SCK_DAISY}
}

type LPSPI4_SDI_SELECT_INPUT uint32

func LPSPI4_SDI_DAISY_(p *Periph) mmio.RM32[LPSPI4_SDI_SELECT_INPUT] {
	return mmio.RM32[LPSPI4_SDI_SELECT_INPUT]{R: &p.LPSPI4_SDI_SELECT_INPUT, Mask: LPSPI4_SDI_DAISY}
}

type LPSPI4_SDO_SELECT_INPUT uint32

func LPSPI4_SDO_DAISY_(p *Periph) mmio.RM32[LPSPI4_SDO_SELECT_INPUT] {
	return mmio.RM32[LPSPI4_SDO_SELECT_INPUT]{R: &p.LPSPI4_SDO_SELECT_INPUT, Mask: LPSPI4_SDO_DAISY}
}

type LPUART2_RX_SELECT_INPUT uint32

func LPUART2_RX_DAISY_(p *Periph) mmio.RM32[LPUART2_RX_SELECT_INPUT] {
	return mmio.RM32[LPUART2_RX_SELECT_INPUT]{R: &p.LPUART2_RX_SELECT_INPUT, Mask: LPUART2_RX_DAISY}
}

type LPUART2_TX_SELECT_INPUT uint32

func LPUART2_TX_DAISY_(p *Periph) mmio.RM32[LPUART2_TX_SELECT_INPUT] {
	return mmio.RM32[LPUART2_TX_SELECT_INPUT]{R: &p.LPUART2_TX_SELECT_INPUT, Mask: LPUART2_TX_DAISY}
}

type LPUART3_CTS_B_SELECT_INPUT uint32

func LPUART3_CTS_B_DAISY_(p *Periph) mmio.RM32[LPUART3_CTS_B_SELECT_INPUT] {
	return mmio.RM32[LPUART3_CTS_B_SELECT_INPUT]{R: &p.LPUART3_CTS_B_SELECT_INPUT, Mask: LPUART3_CTS_B_DAISY}
}

type LPUART3_RX_SELECT_INPUT uint32

func LPUART3_RX_DAISY_(p *Periph) mmio.RM32[LPUART3_RX_SELECT_INPUT] {
	return mmio.RM32[LPUART3_RX_SELECT_INPUT]{R: &p.LPUART3_RX_SELECT_INPUT, Mask: LPUART3_RX_DAISY}
}

type LPUART3_TX_SELECT_INPUT uint32

func LPUART3_TX_DAISY_(p *Periph) mmio.RM32[LPUART3_TX_SELECT_INPUT] {
	return mmio.RM32[LPUART3_TX_SELECT_INPUT]{R: &p.LPUART3_TX_SELECT_INPUT, Mask: LPUART3_TX_DAISY}
}

type LPUART4_RX_SELECT_INPUT uint32

func LPUART4_RX_DAISY_(p *Periph) mmio.RM32[LPUART4_RX_SELECT_INPUT] {
	return mmio.RM32[LPUART4_RX_SELECT_INPUT]{R: &p.LPUART4_RX_SELECT_INPUT, Mask: LPUART4_RX_DAISY}
}

type LPUART4_TX_SELECT_INPUT uint32

func LPUART4_TX_DAISY_(p *Periph) mmio.RM32[LPUART4_TX_SELECT_INPUT] {
	return mmio.RM32[LPUART4_TX_SELECT_INPUT]{R: &p.LPUART4_TX_SELECT_INPUT, Mask: LPUART4_TX_DAISY}
}

type LPUART5_RX_SELECT_INPUT uint32

func LPUART5_RX_DAISY_(p *Periph) mmio.RM32[LPUART5_RX_SELECT_INPUT] {
	return mmio.RM32[LPUART5_RX_SELECT_INPUT]{R: &p.LPUART5_RX_SELECT_INPUT, Mask: LPUART5_RX_DAISY}
}

type LPUART5_TX_SELECT_INPUT uint32

func LPUART5_TX_DAISY_(p *Periph) mmio.RM32[LPUART5_TX_SELECT_INPUT] {
	return mmio.RM32[LPUART5_TX_SELECT_INPUT]{R: &p.LPUART5_TX_SELECT_INPUT, Mask: LPUART5_TX_DAISY}
}

type LPUART6_RX_SELECT_INPUT uint32

func LPUART6_RX_DAISY_(p *Periph) mmio.RM32[LPUART6_RX_SELECT_INPUT] {
	return mmio.RM32[LPUART6_RX_SELECT_INPUT]{R: &p.LPUART6_RX_SELECT_INPUT, Mask: LPUART6_RX_DAISY}
}

type LPUART6_TX_SELECT_INPUT uint32

func LPUART6_TX_DAISY_(p *Periph) mmio.RM32[LPUART6_TX_SELECT_INPUT] {
	return mmio.RM32[LPUART6_TX_SELECT_INPUT]{R: &p.LPUART6_TX_SELECT_INPUT, Mask: LPUART6_TX_DAISY}
}

type LPUART7_RX_SELECT_INPUT uint32

func LPUART7_RX_DAISY_(p *Periph) mmio.RM32[LPUART7_RX_SELECT_INPUT] {
	return mmio.RM32[LPUART7_RX_SELECT_INPUT]{R: &p.LPUART7_RX_SELECT_INPUT, Mask: LPUART7_RX_DAISY}
}

type LPUART7_TX_SELECT_INPUT uint32

func LPUART7_TX_DAISY_(p *Periph) mmio.RM32[LPUART7_TX_SELECT_INPUT] {
	return mmio.RM32[LPUART7_TX_SELECT_INPUT]{R: &p.LPUART7_TX_SELECT_INPUT, Mask: LPUART7_TX_DAISY}
}

type LPUART8_RX_SELECT_INPUT uint32

func LPUART8_RX_DAISY_(p *Periph) mmio.RM32[LPUART8_RX_SELECT_INPUT] {
	return mmio.RM32[LPUART8_RX_SELECT_INPUT]{R: &p.LPUART8_RX_SELECT_INPUT, Mask: LPUART8_RX_DAISY}
}

type LPUART8_TX_SELECT_INPUT uint32

func LPUART8_TX_DAISY_(p *Periph) mmio.RM32[LPUART8_TX_SELECT_INPUT] {
	return mmio.RM32[LPUART8_TX_SELECT_INPUT]{R: &p.LPUART8_TX_SELECT_INPUT, Mask: LPUART8_TX_DAISY}
}

type NMI_SELECT_INPUT uint32

func NMI_DAISY_(p *Periph) mmio.RM32[NMI_SELECT_INPUT] {
	return mmio.RM32[NMI_SELECT_INPUT]{R: &p.NMI_SELECT_INPUT, Mask: NMI_DAISY}
}

type QTIMER2_TIMER0_SELECT_INPUT uint32

func QTIMER2_TIMER0_DAISY_(p *Periph) mmio.RM32[QTIMER2_TIMER0_SELECT_INPUT] {
	return mmio.RM32[QTIMER2_TIMER0_SELECT_INPUT]{R: &p.QTIMER2_TIMER0_SELECT_INPUT, Mask: QTIMER2_TIMER0_DAISY}
}

type QTIMER2_TIMER1_SELECT_INPUT uint32

func QTIMER2_TIMER1_DAISY_(p *Periph) mmio.RM32[QTIMER2_TIMER1_SELECT_INPUT] {
	return mmio.RM32[QTIMER2_TIMER1_SELECT_INPUT]{R: &p.QTIMER2_TIMER1_SELECT_INPUT, Mask: QTIMER2_TIMER1_DAISY}
}

type QTIMER2_TIMER2_SELECT_INPUT uint32

func QTIMER2_TIMER2_DAISY_(p *Periph) mmio.RM32[QTIMER2_TIMER2_SELECT_INPUT] {
	return mmio.RM32[QTIMER2_TIMER2_SELECT_INPUT]{R: &p.QTIMER2_TIMER2_SELECT_INPUT, Mask: QTIMER2_TIMER2_DAISY}
}

type QTIMER2_TIMER3_SELECT_INPUT uint32

func QTIMER2_TIMER3_DAISY_(p *Periph) mmio.RM32[QTIMER2_TIMER3_SELECT_INPUT] {
	return mmio.RM32[QTIMER2_TIMER3_SELECT_INPUT]{R: &p.QTIMER2_TIMER3_SELECT_INPUT, Mask: QTIMER2_TIMER3_DAISY}
}

type QTIMER3_TIMER0_SELECT_INPUT uint32

func QTIMER3_TIMER0_DAISY_(p *Periph) mmio.RM32[QTIMER3_TIMER0_SELECT_INPUT] {
	return mmio.RM32[QTIMER3_TIMER0_SELECT_INPUT]{R: &p.QTIMER3_TIMER0_SELECT_INPUT, Mask: QTIMER3_TIMER0_DAISY}
}

type QTIMER3_TIMER1_SELECT_INPUT uint32

func QTIMER3_TIMER1_DAISY_(p *Periph) mmio.RM32[QTIMER3_TIMER1_SELECT_INPUT] {
	return mmio.RM32[QTIMER3_TIMER1_SELECT_INPUT]{R: &p.QTIMER3_TIMER1_SELECT_INPUT, Mask: QTIMER3_TIMER1_DAISY}
}

type QTIMER3_TIMER2_SELECT_INPUT uint32

func QTIMER3_TIMER2_DAISY_(p *Periph) mmio.RM32[QTIMER3_TIMER2_SELECT_INPUT] {
	return mmio.RM32[QTIMER3_TIMER2_SELECT_INPUT]{R: &p.QTIMER3_TIMER2_SELECT_INPUT, Mask: QTIMER3_TIMER2_DAISY}
}

type QTIMER3_TIMER3_SELECT_INPUT uint32

func QTIMER3_TIMER3_DAISY_(p *Periph) mmio.RM32[QTIMER3_TIMER3_SELECT_INPUT] {
	return mmio.RM32[QTIMER3_TIMER3_SELECT_INPUT]{R: &p.QTIMER3_TIMER3_SELECT_INPUT, Mask: QTIMER3_TIMER3_DAISY}
}

type SAI1_MCLK2_SELECT_INPUT uint32

func SAI1_MCLK2_DAISY_(p *Periph) mmio.RM32[SAI1_MCLK2_SELECT_INPUT] {
	return mmio.RM32[SAI1_MCLK2_SELECT_INPUT]{R: &p.SAI1_MCLK2_SELECT_INPUT, Mask: SAI1_MCLK2_DAISY}
}

type SAI1_RX_BCLK_SELECT_INPUT uint32

func SAI1_RX_BCLK_DAISY_(p *Periph) mmio.RM32[SAI1_RX_BCLK_SELECT_INPUT] {
	return mmio.RM32[SAI1_RX_BCLK_SELECT_INPUT]{R: &p.SAI1_RX_BCLK_SELECT_INPUT, Mask: SAI1_RX_BCLK_DAISY}
}

type SAI1_RX_DATA0_SELECT_INPUT uint32

func SAI1_RX_DATA0_DAISY_(p *Periph) mmio.RM32[SAI1_RX_DATA0_SELECT_INPUT] {
	return mmio.RM32[SAI1_RX_DATA0_SELECT_INPUT]{R: &p.SAI1_RX_DATA0_SELECT_INPUT, Mask: SAI1_RX_DATA0_DAISY}
}

type SAI1_RX_DATA1_SELECT_INPUT uint32

func SAI1_RX_DATA1_DAISY_(p *Periph) mmio.RM32[SAI1_RX_DATA1_SELECT_INPUT] {
	return mmio.RM32[SAI1_RX_DATA1_SELECT_INPUT]{R: &p.SAI1_RX_DATA1_SELECT_INPUT, Mask: SAI1_RX_DATA1_DAISY}
}

type SAI1_RX_DATA2_SELECT_INPUT uint32

func SAI1_RX_DATA2_DAISY_(p *Periph) mmio.RM32[SAI1_RX_DATA2_SELECT_INPUT] {
	return mmio.RM32[SAI1_RX_DATA2_SELECT_INPUT]{R: &p.SAI1_RX_DATA2_SELECT_INPUT, Mask: SAI1_RX_DATA2_DAISY}
}

type SAI1_RX_DATA3_SELECT_INPUT uint32

func SAI1_RX_DATA3_DAISY_(p *Periph) mmio.RM32[SAI1_RX_DATA3_SELECT_INPUT] {
	return mmio.RM32[SAI1_RX_DATA3_SELECT_INPUT]{R: &p.SAI1_RX_DATA3_SELECT_INPUT, Mask: SAI1_RX_DATA3_DAISY}
}

type SAI1_RX_SYNC_SELECT_INPUT uint32

func SAI1_RX_SYNC_DAISY_(p *Periph) mmio.RM32[SAI1_RX_SYNC_SELECT_INPUT] {
	return mmio.RM32[SAI1_RX_SYNC_SELECT_INPUT]{R: &p.SAI1_RX_SYNC_SELECT_INPUT, Mask: SAI1_RX_SYNC_DAISY}
}

type SAI1_TX_BCLK_SELECT_INPUT uint32

func SAI1_TX_BCLK_DAISY_(p *Periph) mmio.RM32[SAI1_TX_BCLK_SELECT_INPUT] {
	return mmio.RM32[SAI1_TX_BCLK_SELECT_INPUT]{R: &p.SAI1_TX_BCLK_SELECT_INPUT, Mask: SAI1_TX_BCLK_DAISY}
}

type SAI1_TX_SYNC_SELECT_INPUT uint32

func SAI1_TX_SYNC_DAISY_(p *Periph) mmio.RM32[SAI1_TX_SYNC_SELECT_INPUT] {
	return mmio.RM32[SAI1_TX_SYNC_SELECT_INPUT]{R: &p.SAI1_TX_SYNC_SELECT_INPUT, Mask: SAI1_TX_SYNC_DAISY}
}

type SAI2_MCLK2_SELECT_INPUT uint32

func SAI2_MCLK2_DAISY_(p *Periph) mmio.RM32[SAI2_MCLK2_SELECT_INPUT] {
	return mmio.RM32[SAI2_MCLK2_SELECT_INPUT]{R: &p.SAI2_MCLK2_SELECT_INPUT, Mask: SAI2_MCLK2_DAISY}
}

type SAI2_RX_BCLK_SELECT_INPUT uint32

func SAI2_RX_BCLK_DAISY_(p *Periph) mmio.RM32[SAI2_RX_BCLK_SELECT_INPUT] {
	return mmio.RM32[SAI2_RX_BCLK_SELECT_INPUT]{R: &p.SAI2_RX_BCLK_SELECT_INPUT, Mask: SAI2_RX_BCLK_DAISY}
}

type SAI2_RX_DATA0_SELECT_INPUT uint32

func SAI2_RX_DATA0_DAISY_(p *Periph) mmio.RM32[SAI2_RX_DATA0_SELECT_INPUT] {
	return mmio.RM32[SAI2_RX_DATA0_SELECT_INPUT]{R: &p.SAI2_RX_DATA0_SELECT_INPUT, Mask: SAI2_RX_DATA0_DAISY}
}

type SAI2_RX_SYNC_SELECT_INPUT uint32

func SAI2_RX_SYNC_DAISY_(p *Periph) mmio.RM32[SAI2_RX_SYNC_SELECT_INPUT] {
	return mmio.RM32[SAI2_RX_SYNC_SELECT_INPUT]{R: &p.SAI2_RX_SYNC_SELECT_INPUT, Mask: SAI2_RX_SYNC_DAISY}
}

type SAI2_TX_BCLK_SELECT_INPUT uint32

func SAI2_TX_BCLK_DAISY_(p *Periph) mmio.RM32[SAI2_TX_BCLK_SELECT_INPUT] {
	return mmio.RM32[SAI2_TX_BCLK_SELECT_INPUT]{R: &p.SAI2_TX_BCLK_SELECT_INPUT, Mask: SAI2_TX_BCLK_DAISY}
}

type SAI2_TX_SYNC_SELECT_INPUT uint32

func SAI2_TX_SYNC_DAISY_(p *Periph) mmio.RM32[SAI2_TX_SYNC_SELECT_INPUT] {
	return mmio.RM32[SAI2_TX_SYNC_SELECT_INPUT]{R: &p.SAI2_TX_SYNC_SELECT_INPUT, Mask: SAI2_TX_SYNC_DAISY}
}

type SPDIF_IN_SELECT_INPUT uint32

func SPDIF_IN_DAISY_(p *Periph) mmio.RM32[SPDIF_IN_SELECT_INPUT] {
	return mmio.RM32[SPDIF_IN_SELECT_INPUT]{R: &p.SPDIF_IN_SELECT_INPUT, Mask: SPDIF_IN_DAISY}
}

type USB_OTG2_OC_SELECT_INPUT uint32

func USB_OTG2_OC_DAISY_(p *Periph) mmio.RM32[USB_OTG2_OC_SELECT_INPUT] {
	return mmio.RM32[USB_OTG2_OC_SELECT_INPUT]{R: &p.USB_OTG2_OC_SELECT_INPUT, Mask: USB_OTG2_OC_DAISY}
}

type USB_OTG1_OC_SELECT_INPUT uint32

func USB_OTG1_OC_DAISY_(p *Periph) mmio.RM32[USB_OTG1_OC_SELECT_INPUT] {
	return mmio.RM32[USB_OTG1_OC_SELECT_INPUT]{R: &p.USB_OTG1_OC_SELECT_INPUT, Mask: USB_OTG1_OC_DAISY}
}

type USDHC1_CD_B_SELECT_INPUT uint32

func USDHC1_CD_B_DAISY_(p *Periph) mmio.RM32[USDHC1_CD_B_SELECT_INPUT] {
	return mmio.RM32[USDHC1_CD_B_SELECT_INPUT]{R: &p.USDHC1_CD_B_SELECT_INPUT, Mask: USDHC1_CD_B_DAISY}
}

type USDHC1_WP_SELECT_INPUT uint32

func USDHC1_WP_DAISY_(p *Periph) mmio.RM32[USDHC1_WP_SELECT_INPUT] {
	return mmio.RM32[USDHC1_WP_SELECT_INPUT]{R: &p.USDHC1_WP_SELECT_INPUT, Mask: USDHC1_WP_DAISY}
}

type USDHC2_CLK_SELECT_INPUT uint32

func USDHC2_CLK_DAISY_(p *Periph) mmio.RM32[USDHC2_CLK_SELECT_INPUT] {
	return mmio.RM32[USDHC2_CLK_SELECT_INPUT]{R: &p.USDHC2_CLK_SELECT_INPUT, Mask: USDHC2_CLK_DAISY}
}

type USDHC2_CD_B_SELECT_INPUT uint32

func USDHC2_CD_B_DAISY_(p *Periph) mmio.RM32[USDHC2_CD_B_SELECT_INPUT] {
	return mmio.RM32[USDHC2_CD_B_SELECT_INPUT]{R: &p.USDHC2_CD_B_SELECT_INPUT, Mask: USDHC2_CD_B_DAISY}
}

type USDHC2_CMD_SELECT_INPUT uint32

func USDHC2_CMD_DAISY_(p *Periph) mmio.RM32[USDHC2_CMD_SELECT_INPUT] {
	return mmio.RM32[USDHC2_CMD_SELECT_INPUT]{R: &p.USDHC2_CMD_SELECT_INPUT, Mask: USDHC2_CMD_DAISY}
}

type USDHC2_DATA0_SELECT_INPUT uint32

func USDHC2_DATA0_DAISY_(p *Periph) mmio.RM32[USDHC2_DATA0_SELECT_INPUT] {
	return mmio.RM32[USDHC2_DATA0_SELECT_INPUT]{R: &p.USDHC2_DATA0_SELECT_INPUT, Mask: USDHC2_DATA0_DAISY}
}

type USDHC2_DATA1_SELECT_INPUT uint32

func USDHC2_DATA1_DAISY_(p *Periph) mmio.RM32[USDHC2_DATA1_SELECT_INPUT] {
	return mmio.RM32[USDHC2_DATA1_SELECT_INPUT]{R: &p.USDHC2_DATA1_SELECT_INPUT, Mask: USDHC2_DATA1_DAISY}
}

type USDHC2_DATA2_SELECT_INPUT uint32

func USDHC2_DATA2_DAISY_(p *Periph) mmio.RM32[USDHC2_DATA2_SELECT_INPUT] {
	return mmio.RM32[USDHC2_DATA2_SELECT_INPUT]{R: &p.USDHC2_DATA2_SELECT_INPUT, Mask: USDHC2_DATA2_DAISY}
}

type USDHC2_DATA3_SELECT_INPUT uint32

func USDHC2_DATA3_DAISY_(p *Periph) mmio.RM32[USDHC2_DATA3_SELECT_INPUT] {
	return mmio.RM32[USDHC2_DATA3_SELECT_INPUT]{R: &p.USDHC2_DATA3_SELECT_INPUT, Mask: USDHC2_DATA3_DAISY}
}

type USDHC2_DATA4_SELECT_INPUT uint32

func USDHC2_DATA4_DAISY_(p *Periph) mmio.RM32[USDHC2_DATA4_SELECT_INPUT] {
	return mmio.RM32[USDHC2_DATA4_SELECT_INPUT]{R: &p.USDHC2_DATA4_SELECT_INPUT, Mask: USDHC2_DATA4_DAISY}
}

type USDHC2_DATA5_SELECT_INPUT uint32

func USDHC2_DATA5_DAISY_(p *Periph) mmio.RM32[USDHC2_DATA5_SELECT_INPUT] {
	return mmio.RM32[USDHC2_DATA5_SELECT_INPUT]{R: &p.USDHC2_DATA5_SELECT_INPUT, Mask: USDHC2_DATA5_DAISY}
}

type USDHC2_DATA6_SELECT_INPUT uint32

func USDHC2_DATA6_DAISY_(p *Periph) mmio.RM32[USDHC2_DATA6_SELECT_INPUT] {
	return mmio.RM32[USDHC2_DATA6_SELECT_INPUT]{R: &p.USDHC2_DATA6_SELECT_INPUT, Mask: USDHC2_DATA6_DAISY}
}

type USDHC2_DATA7_SELECT_INPUT uint32

func USDHC2_DATA7_DAISY_(p *Periph) mmio.RM32[USDHC2_DATA7_SELECT_INPUT] {
	return mmio.RM32[USDHC2_DATA7_SELECT_INPUT]{R: &p.USDHC2_DATA7_SELECT_INPUT, Mask: USDHC2_DATA7_DAISY}
}

type USDHC2_WP_SELECT_INPUT uint32

func USDHC2_WP_DAISY_(p *Periph) mmio.RM32[USDHC2_WP_SELECT_INPUT] {
	return mmio.RM32[USDHC2_WP_SELECT_INPUT]{R: &p.USDHC2_WP_SELECT_INPUT, Mask: USDHC2_WP_DAISY}
}

type XBAR1_IN02_SELECT_INPUT uint32

func XBAR1_IN02_DAISY_(p *Periph) mmio.RM32[XBAR1_IN02_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN02_SELECT_INPUT]{R: &p.XBAR1_IN02_SELECT_INPUT, Mask: XBAR1_IN02_DAISY}
}

type XBAR1_IN03_SELECT_INPUT uint32

func XBAR1_IN03_DAISY_(p *Periph) mmio.RM32[XBAR1_IN03_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN03_SELECT_INPUT]{R: &p.XBAR1_IN03_SELECT_INPUT, Mask: XBAR1_IN03_DAISY}
}

type XBAR1_IN04_SELECT_INPUT uint32

func XBAR1_IN04_DAISY_(p *Periph) mmio.RM32[XBAR1_IN04_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN04_SELECT_INPUT]{R: &p.XBAR1_IN04_SELECT_INPUT, Mask: XBAR1_IN04_DAISY}
}

type XBAR1_IN05_SELECT_INPUT uint32

func XBAR1_IN05_DAISY_(p *Periph) mmio.RM32[XBAR1_IN05_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN05_SELECT_INPUT]{R: &p.XBAR1_IN05_SELECT_INPUT, Mask: XBAR1_IN05_DAISY}
}

type XBAR1_IN06_SELECT_INPUT uint32

func XBAR1_IN06_DAISY_(p *Periph) mmio.RM32[XBAR1_IN06_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN06_SELECT_INPUT]{R: &p.XBAR1_IN06_SELECT_INPUT, Mask: XBAR1_IN06_DAISY}
}

type XBAR1_IN07_SELECT_INPUT uint32

func XBAR1_IN07_DAISY_(p *Periph) mmio.RM32[XBAR1_IN07_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN07_SELECT_INPUT]{R: &p.XBAR1_IN07_SELECT_INPUT, Mask: XBAR1_IN07_DAISY}
}

type XBAR1_IN08_SELECT_INPUT uint32

func XBAR1_IN08_DAISY_(p *Periph) mmio.RM32[XBAR1_IN08_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN08_SELECT_INPUT]{R: &p.XBAR1_IN08_SELECT_INPUT, Mask: XBAR1_IN08_DAISY}
}

type XBAR1_IN09_SELECT_INPUT uint32

func XBAR1_IN09_DAISY_(p *Periph) mmio.RM32[XBAR1_IN09_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN09_SELECT_INPUT]{R: &p.XBAR1_IN09_SELECT_INPUT, Mask: XBAR1_IN09_DAISY}
}

type XBAR1_IN17_SELECT_INPUT uint32

func XBAR1_IN17_DAISY_(p *Periph) mmio.RM32[XBAR1_IN17_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN17_SELECT_INPUT]{R: &p.XBAR1_IN17_SELECT_INPUT, Mask: XBAR1_IN17_DAISY}
}

type XBAR1_IN18_SELECT_INPUT uint32

func XBAR1_IN18_DAISY_(p *Periph) mmio.RM32[XBAR1_IN18_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN18_SELECT_INPUT]{R: &p.XBAR1_IN18_SELECT_INPUT, Mask: XBAR1_IN18_DAISY}
}

type XBAR1_IN20_SELECT_INPUT uint32

func XBAR1_IN20_DAISY_(p *Periph) mmio.RM32[XBAR1_IN20_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN20_SELECT_INPUT]{R: &p.XBAR1_IN20_SELECT_INPUT, Mask: XBAR1_IN20_DAISY}
}

type XBAR1_IN22_SELECT_INPUT uint32

func XBAR1_IN22_DAISY_(p *Periph) mmio.RM32[XBAR1_IN22_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN22_SELECT_INPUT]{R: &p.XBAR1_IN22_SELECT_INPUT, Mask: XBAR1_IN22_DAISY}
}

type XBAR1_IN23_SELECT_INPUT uint32

func XBAR1_IN23_DAISY_(p *Periph) mmio.RM32[XBAR1_IN23_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN23_SELECT_INPUT]{R: &p.XBAR1_IN23_SELECT_INPUT, Mask: XBAR1_IN23_DAISY}
}

type XBAR1_IN24_SELECT_INPUT uint32

func XBAR1_IN24_DAISY_(p *Periph) mmio.RM32[XBAR1_IN24_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN24_SELECT_INPUT]{R: &p.XBAR1_IN24_SELECT_INPUT, Mask: XBAR1_IN24_DAISY}
}

type XBAR1_IN14_SELECT_INPUT uint32

func XBAR1_IN14_DAISY_(p *Periph) mmio.RM32[XBAR1_IN14_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN14_SELECT_INPUT]{R: &p.XBAR1_IN14_SELECT_INPUT, Mask: XBAR1_IN14_DAISY}
}

type XBAR1_IN15_SELECT_INPUT uint32

func XBAR1_IN15_DAISY_(p *Periph) mmio.RM32[XBAR1_IN15_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN15_SELECT_INPUT]{R: &p.XBAR1_IN15_SELECT_INPUT, Mask: XBAR1_IN15_DAISY}
}

type XBAR1_IN16_SELECT_INPUT uint32

func XBAR1_IN16_DAISY_(p *Periph) mmio.RM32[XBAR1_IN16_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN16_SELECT_INPUT]{R: &p.XBAR1_IN16_SELECT_INPUT, Mask: XBAR1_IN16_DAISY}
}

type XBAR1_IN25_SELECT_INPUT uint32

func XBAR1_IN25_DAISY_(p *Periph) mmio.RM32[XBAR1_IN25_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN25_SELECT_INPUT]{R: &p.XBAR1_IN25_SELECT_INPUT, Mask: XBAR1_IN25_DAISY}
}

type XBAR1_IN19_SELECT_INPUT uint32

func XBAR1_IN19_DAISY_(p *Periph) mmio.RM32[XBAR1_IN19_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN19_SELECT_INPUT]{R: &p.XBAR1_IN19_SELECT_INPUT, Mask: XBAR1_IN19_DAISY}
}

type XBAR1_IN21_SELECT_INPUT uint32

func XBAR1_IN21_DAISY_(p *Periph) mmio.RM32[XBAR1_IN21_SELECT_INPUT] {
	return mmio.RM32[XBAR1_IN21_SELECT_INPUT]{R: &p.XBAR1_IN21_SELECT_INPUT, Mask: XBAR1_IN21_DAISY}
}

type ENET2_IPG_CLK_RMII_SELECT_INPUT uint32

func ENET2_IPG_CLK_RMII_DAISY_(p *Periph) mmio.RM32[ENET2_IPG_CLK_RMII_SELECT_INPUT] {
	return mmio.RM32[ENET2_IPG_CLK_RMII_SELECT_INPUT]{R: &p.ENET2_IPG_CLK_RMII_SELECT_INPUT, Mask: ENET2_IPG_CLK_RMII_DAISY}
}

type ENET2_IPP_IND_MAC0_MDIO_SELECT_INPUT uint32

func ENET2_IPP_IND_MAC0_MDIO_DAISY_(p *Periph) mmio.RM32[ENET2_IPP_IND_MAC0_MDIO_SELECT_INPUT] {
	return mmio.RM32[ENET2_IPP_IND_MAC0_MDIO_SELECT_INPUT]{R: &p.ENET2_IPP_IND_MAC0_MDIO_SELECT_INPUT, Mask: ENET2_IPP_IND_MAC0_MDIO_DAISY}
}

type ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_0 uint32

func ENET2_IPP_IND_MAC0_RXDATA_DAISY_0_(p *Periph) mmio.RM32[ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_0] {
	return mmio.RM32[ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_0]{R: &p.ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_0, Mask: ENET2_IPP_IND_MAC0_RXDATA_DAISY_0}
}

type ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_1 uint32

func ENET2_IPP_IND_MAC0_RXDATA_DAISY_1_(p *Periph) mmio.RM32[ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_1] {
	return mmio.RM32[ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_1]{R: &p.ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_1, Mask: ENET2_IPP_IND_MAC0_RXDATA_DAISY_1}
}

type ENET2_IPP_IND_MAC0_RXEN_SELECT_INPUT uint32

func ENET2_IPP_IND_MAC0_RXEN_DAISY_(p *Periph) mmio.RM32[ENET2_IPP_IND_MAC0_RXEN_SELECT_INPUT] {
	return mmio.RM32[ENET2_IPP_IND_MAC0_RXEN_SELECT_INPUT]{R: &p.ENET2_IPP_IND_MAC0_RXEN_SELECT_INPUT, Mask: ENET2_IPP_IND_MAC0_RXEN_DAISY}
}

type ENET2_IPP_IND_MAC0_RXERR_SELECT_INPUT uint32

func ENET2_IPP_IND_MAC0_RXERR_DAISY_(p *Periph) mmio.RM32[ENET2_IPP_IND_MAC0_RXERR_SELECT_INPUT] {
	return mmio.RM32[ENET2_IPP_IND_MAC0_RXERR_SELECT_INPUT]{R: &p.ENET2_IPP_IND_MAC0_RXERR_SELECT_INPUT, Mask: ENET2_IPP_IND_MAC0_RXERR_DAISY}
}

type ENET2_IPP_IND_MAC0_TIMER_SELECT_INPUT_0 uint32

func ENET2_IPP_IND_MAC0_TIMER_DAISY_0_(p *Periph) mmio.RM32[ENET2_IPP_IND_MAC0_TIMER_SELECT_INPUT_0] {
	return mmio.RM32[ENET2_IPP_IND_MAC0_TIMER_SELECT_INPUT_0]{R: &p.ENET2_IPP_IND_MAC0_TIMER_SELECT_INPUT_0, Mask: ENET2_IPP_IND_MAC0_TIMER_DAISY_0}
}

type ENET2_IPP_IND_MAC0_TXCLK_SELECT_INPUT uint32

func ENET2_IPP_IND_MAC0_TXCLK_DAISY_(p *Periph) mmio.RM32[ENET2_IPP_IND_MAC0_TXCLK_SELECT_INPUT] {
	return mmio.RM32[ENET2_IPP_IND_MAC0_TXCLK_SELECT_INPUT]{R: &p.ENET2_IPP_IND_MAC0_TXCLK_SELECT_INPUT, Mask: ENET2_IPP_IND_MAC0_TXCLK_DAISY}
}

type FLEXSPI2_IPP_IND_DQS_FA_SELECT_INPUT uint32

func FLEXSPI2_IPP_IND_DQS_FA_DAISY_(p *Periph) mmio.RM32[FLEXSPI2_IPP_IND_DQS_FA_SELECT_INPUT] {
	return mmio.RM32[FLEXSPI2_IPP_IND_DQS_FA_SELECT_INPUT]{R: &p.FLEXSPI2_IPP_IND_DQS_FA_SELECT_INPUT, Mask: FLEXSPI2_IPP_IND_DQS_FA_DAISY}
}

type FLEXSPI2_IPP_IND_IO_FA_BIT0_SELECT_INPUT uint32

func FLEXSPI2_IPP_IND_IO_FA_BIT0_DAISY_(p *Periph) mmio.RM32[FLEXSPI2_IPP_IND_IO_FA_BIT0_SELECT_INPUT] {
	return mmio.RM32[FLEXSPI2_IPP_IND_IO_FA_BIT0_SELECT_INPUT]{R: &p.FLEXSPI2_IPP_IND_IO_FA_BIT0_SELECT_INPUT, Mask: FLEXSPI2_IPP_IND_IO_FA_BIT0_DAISY}
}

type FLEXSPI2_IPP_IND_IO_FA_BIT1_SELECT_INPUT uint32

func FLEXSPI2_IPP_IND_IO_FA_BIT1_DAISY_(p *Periph) mmio.RM32[FLEXSPI2_IPP_IND_IO_FA_BIT1_SELECT_INPUT] {
	return mmio.RM32[FLEXSPI2_IPP_IND_IO_FA_BIT1_SELECT_INPUT]{R: &p.FLEXSPI2_IPP_IND_IO_FA_BIT1_SELECT_INPUT, Mask: FLEXSPI2_IPP_IND_IO_FA_BIT1_DAISY}
}

type FLEXSPI2_IPP_IND_IO_FA_BIT2_SELECT_INPUT uint32

func FLEXSPI2_IPP_IND_IO_FA_BIT2_DAISY_(p *Periph) mmio.RM32[FLEXSPI2_IPP_IND_IO_FA_BIT2_SELECT_INPUT] {
	return mmio.RM32[FLEXSPI2_IPP_IND_IO_FA_BIT2_SELECT_INPUT]{R: &p.FLEXSPI2_IPP_IND_IO_FA_BIT2_SELECT_INPUT, Mask: FLEXSPI2_IPP_IND_IO_FA_BIT2_DAISY}
}

type FLEXSPI2_IPP_IND_IO_FA_BIT3_SELECT_INPUT uint32

func FLEXSPI2_IPP_IND_IO_FA_BIT3_DAISY_(p *Periph) mmio.RM32[FLEXSPI2_IPP_IND_IO_FA_BIT3_SELECT_INPUT] {
	return mmio.RM32[FLEXSPI2_IPP_IND_IO_FA_BIT3_SELECT_INPUT]{R: &p.FLEXSPI2_IPP_IND_IO_FA_BIT3_SELECT_INPUT, Mask: FLEXSPI2_IPP_IND_IO_FA_BIT3_DAISY}
}

type FLEXSPI2_IPP_IND_IO_FB_BIT0_SELECT_INPUT uint32

func FLEXSPI2_IPP_IND_IO_FB_BIT0_DAISY_(p *Periph) mmio.RM32[FLEXSPI2_IPP_IND_IO_FB_BIT0_SELECT_INPUT] {
	return mmio.RM32[FLEXSPI2_IPP_IND_IO_FB_BIT0_SELECT_INPUT]{R: &p.FLEXSPI2_IPP_IND_IO_FB_BIT0_SELECT_INPUT, Mask: FLEXSPI2_IPP_IND_IO_FB_BIT0_DAISY}
}

type FLEXSPI2_IPP_IND_IO_FB_BIT1_SELECT_INPUT uint32

func FLEXSPI2_IPP_IND_IO_FB_BIT1_DAISY_(p *Periph) mmio.RM32[FLEXSPI2_IPP_IND_IO_FB_BIT1_SELECT_INPUT] {
	return mmio.RM32[FLEXSPI2_IPP_IND_IO_FB_BIT1_SELECT_INPUT]{R: &p.FLEXSPI2_IPP_IND_IO_FB_BIT1_SELECT_INPUT, Mask: FLEXSPI2_IPP_IND_IO_FB_BIT1_DAISY}
}

type FLEXSPI2_IPP_IND_IO_FB_BIT2_SELECT_INPUT uint32

func FLEXSPI2_IPP_IND_IO_FB_BIT2_DAISY_(p *Periph) mmio.RM32[FLEXSPI2_IPP_IND_IO_FB_BIT2_SELECT_INPUT] {
	return mmio.RM32[FLEXSPI2_IPP_IND_IO_FB_BIT2_SELECT_INPUT]{R: &p.FLEXSPI2_IPP_IND_IO_FB_BIT2_SELECT_INPUT, Mask: FLEXSPI2_IPP_IND_IO_FB_BIT2_DAISY}
}

type FLEXSPI2_IPP_IND_IO_FB_BIT3_SELECT_INPUT uint32

func FLEXSPI2_IPP_IND_IO_FB_BIT3_DAISY_(p *Periph) mmio.RM32[FLEXSPI2_IPP_IND_IO_FB_BIT3_SELECT_INPUT] {
	return mmio.RM32[FLEXSPI2_IPP_IND_IO_FB_BIT3_SELECT_INPUT]{R: &p.FLEXSPI2_IPP_IND_IO_FB_BIT3_SELECT_INPUT, Mask: FLEXSPI2_IPP_IND_IO_FB_BIT3_DAISY}
}

type FLEXSPI2_IPP_IND_SCK_FA_SELECT_INPUT uint32

func FLEXSPI2_IPP_IND_SCK_FA_DAISY_(p *Periph) mmio.RM32[FLEXSPI2_IPP_IND_SCK_FA_SELECT_INPUT] {
	return mmio.RM32[FLEXSPI2_IPP_IND_SCK_FA_SELECT_INPUT]{R: &p.FLEXSPI2_IPP_IND_SCK_FA_SELECT_INPUT, Mask: FLEXSPI2_IPP_IND_SCK_FA_DAISY}
}

type FLEXSPI2_IPP_IND_SCK_FB_SELECT_INPUT uint32

func FLEXSPI2_IPP_IND_SCK_FB_DAISY_(p *Periph) mmio.RM32[FLEXSPI2_IPP_IND_SCK_FB_SELECT_INPUT] {
	return mmio.RM32[FLEXSPI2_IPP_IND_SCK_FB_SELECT_INPUT]{R: &p.FLEXSPI2_IPP_IND_SCK_FB_SELECT_INPUT, Mask: FLEXSPI2_IPP_IND_SCK_FB_DAISY}
}

type GPT1_IPP_IND_CAPIN1_SELECT_INPUT uint32

func GPT1_IPP_IND_CAPIN1_DAISY_(p *Periph) mmio.RM32[GPT1_IPP_IND_CAPIN1_SELECT_INPUT] {
	return mmio.RM32[GPT1_IPP_IND_CAPIN1_SELECT_INPUT]{R: &p.GPT1_IPP_IND_CAPIN1_SELECT_INPUT, Mask: GPT1_IPP_IND_CAPIN1_DAISY}
}

type GPT1_IPP_IND_CAPIN2_SELECT_INPUT uint32

func GPT1_IPP_IND_CAPIN2_DAISY_(p *Periph) mmio.RM32[GPT1_IPP_IND_CAPIN2_SELECT_INPUT] {
	return mmio.RM32[GPT1_IPP_IND_CAPIN2_SELECT_INPUT]{R: &p.GPT1_IPP_IND_CAPIN2_SELECT_INPUT, Mask: GPT1_IPP_IND_CAPIN2_DAISY}
}

type GPT1_IPP_IND_CLKIN_SELECT_INPUT uint32

func GPT1_IPP_IND_CLKIN_DAISY_(p *Periph) mmio.RM32[GPT1_IPP_IND_CLKIN_SELECT_INPUT] {
	return mmio.RM32[GPT1_IPP_IND_CLKIN_SELECT_INPUT]{R: &p.GPT1_IPP_IND_CLKIN_SELECT_INPUT, Mask: GPT1_IPP_IND_CLKIN_DAISY}
}

type GPT2_IPP_IND_CAPIN1_SELECT_INPUT uint32

func GPT2_IPP_IND_CAPIN1_DAISY_(p *Periph) mmio.RM32[GPT2_IPP_IND_CAPIN1_SELECT_INPUT] {
	return mmio.RM32[GPT2_IPP_IND_CAPIN1_SELECT_INPUT]{R: &p.GPT2_IPP_IND_CAPIN1_SELECT_INPUT, Mask: GPT2_IPP_IND_CAPIN1_DAISY}
}

type GPT2_IPP_IND_CAPIN2_SELECT_INPUT uint32

func GPT2_IPP_IND_CAPIN2_DAISY_(p *Periph) mmio.RM32[GPT2_IPP_IND_CAPIN2_SELECT_INPUT] {
	return mmio.RM32[GPT2_IPP_IND_CAPIN2_SELECT_INPUT]{R: &p.GPT2_IPP_IND_CAPIN2_SELECT_INPUT, Mask: GPT2_IPP_IND_CAPIN2_DAISY}
}

type GPT2_IPP_IND_CLKIN_SELECT_INPUT uint32

func GPT2_IPP_IND_CLKIN_DAISY_(p *Periph) mmio.RM32[GPT2_IPP_IND_CLKIN_SELECT_INPUT] {
	return mmio.RM32[GPT2_IPP_IND_CLKIN_SELECT_INPUT]{R: &p.GPT2_IPP_IND_CLKIN_SELECT_INPUT, Mask: GPT2_IPP_IND_CLKIN_DAISY}
}

type SAI3_IPG_CLK_SAI_MCLK_SELECT_INPUT_2 uint32

func DAISY_(p *Periph) mmio.RM32[SAI3_IPG_CLK_SAI_MCLK_SELECT_INPUT_2] {
	return mmio.RM32[SAI3_IPG_CLK_SAI_MCLK_SELECT_INPUT_2]{R: &p.SAI3_IPG_CLK_SAI_MCLK_SELECT_INPUT_2, Mask: DAISY}
}

type SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT uint32

func SAI3_IPP_IND_SAI_RXBCLK_DAISY_(p *Periph) mmio.RM32[SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT] {
	return mmio.RM32[SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT]{R: &p.SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT, Mask: SAI3_IPP_IND_SAI_RXBCLK_DAISY}
}

type SAI3_IPP_IND_SAI_RXDATA_SELECT_INPUT_0 uint32

func SAI3_IPP_IND_SAI_RXDATA_DAISY_0_(p *Periph) mmio.RM32[SAI3_IPP_IND_SAI_RXDATA_SELECT_INPUT_0] {
	return mmio.RM32[SAI3_IPP_IND_SAI_RXDATA_SELECT_INPUT_0]{R: &p.SAI3_IPP_IND_SAI_RXDATA_SELECT_INPUT_0, Mask: SAI3_IPP_IND_SAI_RXDATA_DAISY_0}
}

type SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT uint32

func SAI3_IPP_IND_SAI_RXSYNC_DAISY_(p *Periph) mmio.RM32[SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT] {
	return mmio.RM32[SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT]{R: &p.SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT, Mask: SAI3_IPP_IND_SAI_RXSYNC_DAISY}
}

type SAI3_IPP_IND_SAI_TXBCLK_SELECT_INPUT uint32

func SAI3_IPP_IND_SAI_TXBCLK_DAISY_(p *Periph) mmio.RM32[SAI3_IPP_IND_SAI_TXBCLK_SELECT_INPUT] {
	return mmio.RM32[SAI3_IPP_IND_SAI_TXBCLK_SELECT_INPUT]{R: &p.SAI3_IPP_IND_SAI_TXBCLK_SELECT_INPUT, Mask: SAI3_IPP_IND_SAI_TXBCLK_DAISY}
}

type SAI3_IPP_IND_SAI_TXSYNC_SELECT_INPUT uint32

func SAI3_IPP_IND_SAI_TXSYNC_DAISY_(p *Periph) mmio.RM32[SAI3_IPP_IND_SAI_TXSYNC_SELECT_INPUT] {
	return mmio.RM32[SAI3_IPP_IND_SAI_TXSYNC_SELECT_INPUT]{R: &p.SAI3_IPP_IND_SAI_TXSYNC_SELECT_INPUT, Mask: SAI3_IPP_IND_SAI_TXSYNC_DAISY}
}

type SEMC_I_IPP_IND_DQS4_SELECT_INPUT uint32

func SEMC_I_IPP_IND_DQS4_DAISY_(p *Periph) mmio.RM32[SEMC_I_IPP_IND_DQS4_SELECT_INPUT] {
	return mmio.RM32[SEMC_I_IPP_IND_DQS4_SELECT_INPUT]{R: &p.SEMC_I_IPP_IND_DQS4_SELECT_INPUT, Mask: SEMC_I_IPP_IND_DQS4_DAISY}
}

type CANFD_IPP_IND_CANRX_SELECT_INPUT uint32

func CANFD_IPP_IND_CANRX_DAISY_(p *Periph) mmio.RM32[CANFD_IPP_IND_CANRX_SELECT_INPUT] {
	return mmio.RM32[CANFD_IPP_IND_CANRX_SELECT_INPUT]{R: &p.CANFD_IPP_IND_CANRX_SELECT_INPUT, Mask: CANFD_IPP_IND_CANRX_DAISY}
}
