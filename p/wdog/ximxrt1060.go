// Code generated by xgen -g; DO NOT EDIT.

//go:build imxrt1060

package wdog

import (
	"embedded/mmio"
	"unsafe"

	"github.com/embeddedgo/imxrt/p/mmap"
)

type Periph struct {
	WCR  mmio.R16[WCR]
	WSR  mmio.R16[uint16]
	WRSR mmio.R16[WRSR]
	WICR mmio.R16[WICR]
	WMCR mmio.R16[WMCR]
}

func WDOG1() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.WDOG1_BASE))) }
func WDOG2() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.WDOG2_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

type WCR uint16

func WDZST_(p *Periph) mmio.RM16[WCR] { return mmio.RM16[WCR]{R: &p.WCR, Mask: WDZST} }
func WDBG_(p *Periph) mmio.RM16[WCR]  { return mmio.RM16[WCR]{R: &p.WCR, Mask: WDBG} }
func WDE_(p *Periph) mmio.RM16[WCR]   { return mmio.RM16[WCR]{R: &p.WCR, Mask: WDE} }
func WDT_(p *Periph) mmio.RM16[WCR]   { return mmio.RM16[WCR]{R: &p.WCR, Mask: WDT} }
func SRS_(p *Periph) mmio.RM16[WCR]   { return mmio.RM16[WCR]{R: &p.WCR, Mask: SRS} }
func WDA_(p *Periph) mmio.RM16[WCR]   { return mmio.RM16[WCR]{R: &p.WCR, Mask: WDA} }
func SRE_(p *Periph) mmio.RM16[WCR]   { return mmio.RM16[WCR]{R: &p.WCR, Mask: SRE} }
func WDW_(p *Periph) mmio.RM16[WCR]   { return mmio.RM16[WCR]{R: &p.WCR, Mask: WDW} }
func WT_(p *Periph) mmio.RM16[WCR]    { return mmio.RM16[WCR]{R: &p.WCR, Mask: WT} }

type WRSR uint16

func SFTW_(p *Periph) mmio.RM16[WRSR] { return mmio.RM16[WRSR]{R: &p.WRSR, Mask: SFTW} }
func TOUT_(p *Periph) mmio.RM16[WRSR] { return mmio.RM16[WRSR]{R: &p.WRSR, Mask: TOUT} }
func POR_(p *Periph) mmio.RM16[WRSR]  { return mmio.RM16[WRSR]{R: &p.WRSR, Mask: POR} }

type WICR uint16

func WICT_(p *Periph) mmio.RM16[WICR] { return mmio.RM16[WICR]{R: &p.WICR, Mask: WICT} }
func WTIS_(p *Periph) mmio.RM16[WICR] { return mmio.RM16[WICR]{R: &p.WICR, Mask: WTIS} }
func WIE_(p *Periph) mmio.RM16[WICR]  { return mmio.RM16[WICR]{R: &p.WICR, Mask: WIE} }

type WMCR uint16

func PDE_(p *Periph) mmio.RM16[WMCR] { return mmio.RM16[WMCR]{R: &p.WMCR, Mask: PDE} }
