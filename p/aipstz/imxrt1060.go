// DO NOT EDIT THIS FILE. GENERATED BY svdxgen.

//go:build imxrt1060

// Package aipstz provides access to the registers of the AIPSTZ peripheral.
//
// Instances:
//  AIPSTZ1  AIPSTZ1_BASE  -  -  AIPSTZ Control Registers
//  AIPSTZ2  AIPSTZ2_BASE  -  -  AIPSTZ Control Registers
//  AIPSTZ3  AIPSTZ3_BASE  -  -  AIPSTZ Control Registers
//  AIPSTZ4  AIPSTZ4_BASE  -  -  AIPSTZ Control Registers
// Registers:
//  0x000 32  MPR     Master Priviledge Registers
//  0x040 32  OPACR   Off-Platform Peripheral Access Control Registers
//  0x044 32  OPACR1  Off-Platform Peripheral Access Control Registers
//  0x048 32  OPACR2  Off-Platform Peripheral Access Control Registers
//  0x04C 32  OPACR3  Off-Platform Peripheral Access Control Registers
//  0x050 32  OPACR4  Off-Platform Peripheral Access Control Registers
// Import:
//  github.com/embeddedgo/imxrt/p/mmap
package aipstz

const (
	MPROT5 MPR = 0x0F << 8  //+ Master 5 Priviledge, Buffer, Read, Write Control.
	MPL0   MPR = 0x00 << 8  //  Accesses from this master are forced to user-mode (ips_supervisor_access is forced to zero) regardless of the hprot[1] access attribute.
	MPL1   MPR = 0x01 << 8  //  Accesses from this master are not forced to user-mode. The hprot[1] access attribute is used directly to determine ips_supervisor_access.
	MPROT3 MPR = 0x0F << 16 //+ Master 3 Priviledge, Buffer, Read, Write Control.
	MPL0   MPR = 0x00 << 16 //  Accesses from this master are forced to user-mode (ips_supervisor_access is forced to zero) regardless of the hprot[1] access attribute.
	MPL1   MPR = 0x01 << 16 //  Accesses from this master are not forced to user-mode. The hprot[1] access attribute is used directly to determine ips_supervisor_access.
	MPROT2 MPR = 0x0F << 20 //+ Master 2 Priviledge, Buffer, Read, Write Control
	MPL0   MPR = 0x00 << 20 //  Accesses from this master are forced to user-mode (ips_supervisor_access is forced to zero) regardless of the hprot[1] access attribute.
	MPL1   MPR = 0x01 << 20 //  Accesses from this master are not forced to user-mode. The hprot[1] access attribute is used directly to determine ips_supervisor_access.
	MPROT1 MPR = 0x0F << 24 //+ Master 1 Priviledge, Buffer, Read, Write Control
	MPL0   MPR = 0x00 << 24 //  Accesses from this master are forced to user-mode (ips_supervisor_access is forced to zero) regardless of the hprot[1] access attribute.
	MPL1   MPR = 0x01 << 24 //  Accesses from this master are not forced to user-mode. The hprot[1] access attribute is used directly to determine ips_supervisor_access.
	MPROT0 MPR = 0x0F << 28 //+ Master 0 Priviledge, Buffer, Read, Write Control
	MPL0   MPR = 0x00 << 28 //  Accesses from this master are forced to user-mode (ips_supervisor_access is forced to zero) regardless of the hprot[1] access attribute.
	MPL1   MPR = 0x01 << 28 //  Accesses from this master are not forced to user-mode. The hprot[1] access attribute is used directly to determine ips_supervisor_access.
)

const (
	MPROT5n = 8
	MPROT3n = 16
	MPROT2n = 20
	MPROT1n = 24
	MPROT0n = 28
)

const (
	OPAC7 OPACR = 0x0F << 0  //+ Off-platform Peripheral Access Control 7
	TP0   OPACR = 0x00 << 0  //  Accesses from an untrusted master are allowed.
	TP1   OPACR = 0x01 << 0  //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC6 OPACR = 0x0F << 4  //+ Off-platform Peripheral Access Control 6
	TP0   OPACR = 0x00 << 4  //  Accesses from an untrusted master are allowed.
	TP1   OPACR = 0x01 << 4  //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC5 OPACR = 0x0F << 8  //+ Off-platform Peripheral Access Control 5
	TP0   OPACR = 0x00 << 8  //  Accesses from an untrusted master are allowed.
	TP1   OPACR = 0x01 << 8  //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC4 OPACR = 0x0F << 12 //+ Off-platform Peripheral Access Control 4
	TP0   OPACR = 0x00 << 12 //  Accesses from an untrusted master are allowed.
	TP1   OPACR = 0x01 << 12 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC3 OPACR = 0x0F << 16 //+ Off-platform Peripheral Access Control 3
	TP0   OPACR = 0x00 << 16 //  Accesses from an untrusted master are allowed.
	TP1   OPACR = 0x01 << 16 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC2 OPACR = 0x0F << 20 //+ Off-platform Peripheral Access Control 2
	TP0   OPACR = 0x00 << 20 //  Accesses from an untrusted master are allowed.
	TP1   OPACR = 0x01 << 20 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC1 OPACR = 0x0F << 24 //+ Off-platform Peripheral Access Control 1
	TP0   OPACR = 0x00 << 24 //  Accesses from an untrusted master are allowed.
	TP1   OPACR = 0x01 << 24 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC0 OPACR = 0x0F << 28 //+ Off-platform Peripheral Access Control 0
	TP0   OPACR = 0x00 << 28 //  Accesses from an untrusted master are allowed.
	TP1   OPACR = 0x01 << 28 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
)

const (
	OPAC7n = 0
	OPAC6n = 4
	OPAC5n = 8
	OPAC4n = 12
	OPAC3n = 16
	OPAC2n = 20
	OPAC1n = 24
	OPAC0n = 28
)

const (
	OPAC15 OPACR1 = 0x0F << 0  //+ Off-platform Peripheral Access Control 15
	TP0    OPACR1 = 0x00 << 0  //  Accesses from an untrusted master are allowed.
	TP1    OPACR1 = 0x01 << 0  //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC14 OPACR1 = 0x0F << 4  //+ Off-platform Peripheral Access Control 14
	TP0    OPACR1 = 0x00 << 4  //  Accesses from an untrusted master are allowed.
	TP1    OPACR1 = 0x01 << 4  //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC13 OPACR1 = 0x0F << 8  //+ Off-platform Peripheral Access Control 13
	TP0    OPACR1 = 0x00 << 8  //  Accesses from an untrusted master are allowed.
	TP1    OPACR1 = 0x01 << 8  //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC12 OPACR1 = 0x0F << 12 //+ Off-platform Peripheral Access Control 12
	TP0    OPACR1 = 0x00 << 12 //  Accesses from an untrusted master are allowed.
	TP1    OPACR1 = 0x01 << 12 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC11 OPACR1 = 0x0F << 16 //+ Off-platform Peripheral Access Control 11
	TP0    OPACR1 = 0x00 << 16 //  Accesses from an untrusted master are allowed.
	TP1    OPACR1 = 0x01 << 16 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC10 OPACR1 = 0x0F << 20 //+ Off-platform Peripheral Access Control 10
	TP0    OPACR1 = 0x00 << 20 //  Accesses from an untrusted master are allowed.
	TP1    OPACR1 = 0x01 << 20 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC9  OPACR1 = 0x0F << 24 //+ Off-platform Peripheral Access Control 9
	TP0    OPACR1 = 0x00 << 24 //  Accesses from an untrusted master are allowed.
	TP1    OPACR1 = 0x01 << 24 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC8  OPACR1 = 0x0F << 28 //+ Off-platform Peripheral Access Control 8
	TP0    OPACR1 = 0x00 << 28 //  Accesses from an untrusted master are allowed.
	TP1    OPACR1 = 0x01 << 28 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
)

const (
	OPAC15n = 0
	OPAC14n = 4
	OPAC13n = 8
	OPAC12n = 12
	OPAC11n = 16
	OPAC10n = 20
	OPAC9n  = 24
	OPAC8n  = 28
)

const (
	OPAC23 OPACR2 = 0x0F << 0  //+ Off-platform Peripheral Access Control 23
	TP0    OPACR2 = 0x00 << 0  //  Accesses from an untrusted master are allowed.
	TP1    OPACR2 = 0x01 << 0  //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC22 OPACR2 = 0x0F << 4  //+ Off-platform Peripheral Access Control 22
	TP0    OPACR2 = 0x00 << 4  //  Accesses from an untrusted master are allowed.
	TP1    OPACR2 = 0x01 << 4  //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC21 OPACR2 = 0x0F << 8  //+ Off-platform Peripheral Access Control 21
	TP0    OPACR2 = 0x00 << 8  //  Accesses from an untrusted master are allowed.
	TP1    OPACR2 = 0x01 << 8  //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC20 OPACR2 = 0x0F << 12 //+ Off-platform Peripheral Access Control 20
	TP0    OPACR2 = 0x00 << 12 //  Accesses from an untrusted master are allowed.
	TP1    OPACR2 = 0x01 << 12 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC19 OPACR2 = 0x0F << 16 //+ Off-platform Peripheral Access Control 19
	TP0    OPACR2 = 0x00 << 16 //  Accesses from an untrusted master are allowed.
	TP1    OPACR2 = 0x01 << 16 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC18 OPACR2 = 0x0F << 20 //+ Off-platform Peripheral Access Control 18
	TP0    OPACR2 = 0x00 << 20 //  Accesses from an untrusted master are allowed.
	TP1    OPACR2 = 0x01 << 20 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC17 OPACR2 = 0x0F << 24 //+ Off-platform Peripheral Access Control 17
	TP0    OPACR2 = 0x00 << 24 //  Accesses from an untrusted master are allowed.
	TP1    OPACR2 = 0x01 << 24 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC16 OPACR2 = 0x0F << 28 //+ Off-platform Peripheral Access Control 16
	TP0    OPACR2 = 0x00 << 28 //  Accesses from an untrusted master are allowed.
	TP1    OPACR2 = 0x01 << 28 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
)

const (
	OPAC23n = 0
	OPAC22n = 4
	OPAC21n = 8
	OPAC20n = 12
	OPAC19n = 16
	OPAC18n = 20
	OPAC17n = 24
	OPAC16n = 28
)

const (
	OPAC31 OPACR3 = 0x0F << 0  //+ Off-platform Peripheral Access Control 31
	TP0    OPACR3 = 0x00 << 0  //  Accesses from an untrusted master are allowed.
	TP1    OPACR3 = 0x01 << 0  //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC30 OPACR3 = 0x0F << 4  //+ Off-platform Peripheral Access Control 30
	TP0    OPACR3 = 0x00 << 4  //  Accesses from an untrusted master are allowed.
	TP1    OPACR3 = 0x01 << 4  //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC29 OPACR3 = 0x0F << 8  //+ Off-platform Peripheral Access Control 29
	TP0    OPACR3 = 0x00 << 8  //  Accesses from an untrusted master are allowed.
	TP1    OPACR3 = 0x01 << 8  //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC28 OPACR3 = 0x0F << 12 //+ Off-platform Peripheral Access Control 28
	TP0    OPACR3 = 0x00 << 12 //  Accesses from an untrusted master are allowed.
	TP1    OPACR3 = 0x01 << 12 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC27 OPACR3 = 0x0F << 16 //+ Off-platform Peripheral Access Control 27
	TP0    OPACR3 = 0x00 << 16 //  Accesses from an untrusted master are allowed.
	TP1    OPACR3 = 0x01 << 16 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC26 OPACR3 = 0x0F << 20 //+ Off-platform Peripheral Access Control 26
	TP0    OPACR3 = 0x00 << 20 //  Accesses from an untrusted master are allowed.
	TP1    OPACR3 = 0x01 << 20 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC25 OPACR3 = 0x0F << 24 //+ Off-platform Peripheral Access Control 25
	TP0    OPACR3 = 0x00 << 24 //  Accesses from an untrusted master are allowed.
	TP1    OPACR3 = 0x01 << 24 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC24 OPACR3 = 0x0F << 28 //+ Off-platform Peripheral Access Control 24
	TP0    OPACR3 = 0x00 << 28 //  Accesses from an untrusted master are allowed.
	TP1    OPACR3 = 0x01 << 28 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
)

const (
	OPAC31n = 0
	OPAC30n = 4
	OPAC29n = 8
	OPAC28n = 12
	OPAC27n = 16
	OPAC26n = 20
	OPAC25n = 24
	OPAC24n = 28
)

const (
	OPAC33 OPACR4 = 0x0F << 24 //+ Off-platform Peripheral Access Control 33
	TP0    OPACR4 = 0x00 << 24 //  Accesses from an untrusted master are allowed.
	TP1    OPACR4 = 0x01 << 24 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
	OPAC32 OPACR4 = 0x0F << 28 //+ Off-platform Peripheral Access Control 32
	TP0    OPACR4 = 0x00 << 28 //  Accesses from an untrusted master are allowed.
	TP1    OPACR4 = 0x01 << 28 //  Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the IPS bus.
)

const (
	OPAC33n = 24
	OPAC32n = 28
)
