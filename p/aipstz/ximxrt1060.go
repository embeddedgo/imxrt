// DO NOT EDIT THIS FILE. GENERATED BY xgen.

//go:build imxrt1060

package aipstz

import (
	"embedded/mmio"
	"unsafe"

	"github.com/embeddedgo/imxrt/p/mmap"
)

type Periph struct {
	MPR   mmio.R32[MPR]
	_     [15]uint32
	OPACR [5]mmio.R32[OPACR]
}

func AIPSTZ1() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.AIPSTZ1_BASE))) }
func AIPSTZ2() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.AIPSTZ2_BASE))) }
func AIPSTZ3() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.AIPSTZ3_BASE))) }
func AIPSTZ4() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.AIPSTZ4_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

type MPR uint32

func MPROT5_(p *Periph) mmio.RM32[MPR] { return mmio.RM32[MPR]{&p.MPR, MPROT5} }
func MPROT3_(p *Periph) mmio.RM32[MPR] { return mmio.RM32[MPR]{&p.MPR, MPROT3} }
func MPROT2_(p *Periph) mmio.RM32[MPR] { return mmio.RM32[MPR]{&p.MPR, MPROT2} }
func MPROT1_(p *Periph) mmio.RM32[MPR] { return mmio.RM32[MPR]{&p.MPR, MPROT1} }
func MPROT0_(p *Periph) mmio.RM32[MPR] { return mmio.RM32[MPR]{&p.MPR, MPROT0} }

type OPACR uint32

func OPAC7_(p *Periph, i int) mmio.RM32[OPACR] { return mmio.RM32[OPACR]{&p.OPACR[i], OPAC7} }
func OPAC6_(p *Periph, i int) mmio.RM32[OPACR] { return mmio.RM32[OPACR]{&p.OPACR[i], OPAC6} }
func OPAC5_(p *Periph, i int) mmio.RM32[OPACR] { return mmio.RM32[OPACR]{&p.OPACR[i], OPAC5} }
func OPAC4_(p *Periph, i int) mmio.RM32[OPACR] { return mmio.RM32[OPACR]{&p.OPACR[i], OPAC4} }
func OPAC3_(p *Periph, i int) mmio.RM32[OPACR] { return mmio.RM32[OPACR]{&p.OPACR[i], OPAC3} }
func OPAC2_(p *Periph, i int) mmio.RM32[OPACR] { return mmio.RM32[OPACR]{&p.OPACR[i], OPAC2} }
func OPAC1_(p *Periph, i int) mmio.RM32[OPACR] { return mmio.RM32[OPACR]{&p.OPACR[i], OPAC1} }
func OPAC0_(p *Periph, i int) mmio.RM32[OPACR] { return mmio.RM32[OPACR]{&p.OPACR[i], OPAC0} }
